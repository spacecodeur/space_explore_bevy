# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2024"
rust-version = "1.85.0"
name = "bevy"
version = "0.16.1"
build = false
exclude = [
    "assets/",
    "tools/",
    ".github/",
    "crates/",
    "examples/wasm/assets/",
]
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "A refreshingly simple data-driven game engine and app framework"
homepage = "https://bevyengine.org"
documentation = "https://docs.rs/bevy"
readme = "README.md"
keywords = [
    "game",
    "engine",
    "gamedev",
    "graphics",
    "bevy",
]
categories = [
    "game-engines",
    "graphics",
    "gui",
    "rendering",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/bevyengine/bevy"
resolver = "2"

[[package.metadata.example_category]]
description = """
These examples demonstrate how to implement different shaders in user code.

A shader in its most common usage is a small program that is run by the GPU per-vertex in a mesh (a vertex shader) or per-affected-screen-fragment (a fragment shader.) The GPU executes these programs in a highly parallel way.

There are also compute shaders which are used for more general processing leveraging the GPU's parallelism.
"""
name = "Shaders"

[[package.metadata.example_category]]
description = """
These examples are used to test the performance and stability of various parts of the engine in an isolated way.

Due to the focus on performance it's recommended to run the stress tests in release mode:

```sh
cargo run --release --example <example name>
```
"""
name = "Stress Tests"

[package.metadata.docs.rs]
all-features = true
cargo-args = [
    "-Zunstable-options",
    "-Zrustdoc-scrape-examples",
]
rustc-args = [
    "--cfg",
    "docsrs_dep",
]
rustdoc-args = [
    "-Zunstable-options",
    "--generate-link-to-definition",
    "--html-after-content",
    "docs-rs/trait-tags.html",
]

[package.metadata.example.2d_gizmos]
category = "Gizmos"
description = "A scene showcasing 2D gizmos"
name = "2D Gizmos"
wasm = true

[package.metadata.example.2d_screen_shake]
category = "Camera"
description = "A simple 2D screen shake effect"
name = "Screen Shake"
wasm = true

[package.metadata.example.2d_shapes]
category = "2D Rendering"
description = "Renders simple 2D primitive shapes like circles and polygons"
name = "2D Shapes"
wasm = true

[package.metadata.example.2d_top_down_camera]
category = "Camera"
description = "A 2D top-down camera smoothly following player movements"
name = "2D top-down camera"
wasm = true

[package.metadata.example.2d_viewport_to_world]
category = "2D Rendering"
description = "Demonstrates how to use the `Camera::viewport_to_world_2d` method with a dynamic viewport and camera."
name = "2D Viewport To World"
wasm = true

[package.metadata.example.3d_gizmos]
category = "Gizmos"
description = "A scene showcasing 3D gizmos"
name = "3D Gizmos"
wasm = true

[package.metadata.example.3d_rotation]
category = "Transforms"
description = "Illustrates how to (constantly) rotate an object around an axis"
name = "3D Rotation"
wasm = true

[package.metadata.example.3d_scene]
category = "3D Rendering"
description = "Simple 3D scene with basic shapes and lighting"
name = "3D Scene"
wasm = true

[package.metadata.example.3d_shapes]
category = "3D Rendering"
description = "A scene showcasing the built-in 3D shapes"
name = "3D Shapes"
wasm = true

[package.metadata.example.3d_viewport_to_world]
category = "3D Rendering"
description = "Demonstrates how to use the `Camera::viewport_to_world` method"
name = "3D Viewport To World"
wasm = true

[package.metadata.example.alien_cake_addict]
category = "Games"
description = "Eat the cakes. Eat them all. An example 3D game"
name = "Alien Cake Addict"
wasm = true

[package.metadata.example.align]
category = "Transforms"
description = "A demonstration of Transform's axis-alignment feature"
name = "Alignment"
wasm = true

[package.metadata.example.alter_mesh]
category = "Assets"
description = "Shows how to modify the underlying asset of a Mesh after spawning."
name = "Alter Mesh"
wasm = false

[package.metadata.example.alter_sprite]
category = "Assets"
description = "Shows how to modify texture assets after spawning."
name = "Alter Sprite"
wasm = false

[package.metadata.example.ambiguity_detection]
hidden = true

[package.metadata.example.animate_shader]
category = "Shaders"
description = "A shader that uses dynamic data like the time since startup"
name = "Animated"
wasm = true

[package.metadata.example.animated_material]
category = "3D Rendering"
description = "Shows how to animate material properties"
name = "Animated Material"
wasm = true

[package.metadata.example.animated_mesh]
category = "Animation"
description = "Plays an animation on a skinned glTF model of a fox"
name = "Animated Mesh"
wasm = true

[package.metadata.example.animated_mesh_control]
category = "Animation"
description = "Plays an animation from a skinned glTF with keyboard controls"
name = "Animated Mesh Control"
wasm = true

[package.metadata.example.animated_mesh_events]
category = "Animation"
description = "Plays an animation from a skinned glTF with events"
name = "Animated Mesh Events"
wasm = true

[package.metadata.example.animated_transform]
category = "Animation"
description = "Create and play an animation defined by code that operates on the `Transform` component"
name = "Animated Transform"
wasm = true

[package.metadata.example.animated_ui]
category = "Animation"
description = "Shows how to use animation clips to animate UI properties"
name = "Animated UI"
wasm = true

[package.metadata.example.animation_events]
category = "Animation"
description = "Demonstrate how to use animation events"
name = "Animation Events"
wasm = true

[package.metadata.example.animation_graph]
category = "Animation"
description = "Blends multiple animations together with a graph"
name = "Animation Graph"
wasm = true

[package.metadata.example.animation_masks]
category = "Animation"
description = "Demonstrates animation masks"
name = "Animation Masks"
wasm = true

[package.metadata.example.anisotropy]
category = "3D Rendering"
description = "Displays an example model with anisotropy"
name = "Anisotropy"
wasm = false

[package.metadata.example.anti_aliasing]
category = "3D Rendering"
description = "Compares different anti-aliasing methods"
name = "Anti-aliasing"
wasm = false

[package.metadata.example.apply_deferred]
category = "ECS (Entity Component System)"
description = "Show how to use `ApplyDeferred` system"
name = "Apply System Buffers"
wasm = false

[package.metadata.example.array_texture]
category = "Shaders"
description = "A shader that shows how to reuse the core bevy PBR shading functionality in a custom material that obtains the base color from an array texture."
name = "Array Texture"
wasm = true

[package.metadata.example.asset_decompression]
category = "Assets"
description = "Demonstrates loading a compressed asset"
name = "Asset Decompression"
wasm = false

[package.metadata.example.asset_loading]
category = "Assets"
description = "Demonstrates various methods to load assets"
name = "Asset Loading"
wasm = false

[package.metadata.example.asset_processing]
category = "Assets"
description = "Demonstrates how to process and load custom assets"
name = "Asset Processing"
wasm = false

[package.metadata.example.asset_settings]
category = "Assets"
description = "Demonstrates various methods of applying settings when loading an asset"
name = "Asset Settings"
wasm = false

[package.metadata.example.async_compute]
category = "Async Tasks"
description = "How to use `AsyncComputeTaskPool` to complete longer running tasks"
name = "Async Compute"
wasm = false

[package.metadata.example.atmosphere]
category = "3D Rendering"
description = "A scene showcasing pbr atmospheric scattering"
name = "Atmosphere"
wasm = true

[package.metadata.example.atmospheric_fog]
category = "3D Rendering"
description = "A scene showcasing the atmospheric fog effect"
name = "Atmospheric Fog"
wasm = true

[package.metadata.example.audio]
category = "Audio"
description = "Shows how to load and play an audio file"
name = "Audio"
wasm = true

[package.metadata.example.audio_control]
category = "Audio"
description = "Shows how to load and play an audio file, and control how it's played"
name = "Audio Control"
wasm = true

[package.metadata.example.auto_exposure]
category = "3D Rendering"
description = "A scene showcasing auto exposure"
name = "Auto Exposure"
wasm = false

[package.metadata.example.automatic_instancing]
category = "Shaders"
description = "Shows that multiple instances of a cube are automatically instanced in one draw call"
name = "Instancing"
wasm = true

[package.metadata.example.axes]
category = "Gizmos"
description = "Demonstrates the function of axes gizmos"
name = "Axes"
wasm = true

[package.metadata.example.bevymark]
category = "Stress Tests"
description = "A heavy sprite rendering workload to benchmark your system with Bevy"
name = "Bevymark"
wasm = true

[package.metadata.example.blend_modes]
category = "3D Rendering"
description = "Showcases different blend modes"
name = "Blend Modes"
wasm = true

[package.metadata.example.bloom_2d]
category = "2D Rendering"
description = "Illustrates bloom post-processing in 2d"
name = "2D Bloom"
wasm = true

[package.metadata.example.bloom_3d]
category = "3D Rendering"
description = "Illustrates bloom configuration using HDR and emissive materials"
name = "3D Bloom"
wasm = true

[package.metadata.example.borders]
category = "UI (User Interface)"
description = "Demonstrates how to create a node with a border"
name = "Borders"
wasm = true

[package.metadata.example.bounding_2d]
category = "Math"
description = "Showcases bounding volumes and intersection tests"
name = "Bounding Volume Intersections (2D)"
wasm = true

[package.metadata.example.box_shadow]
category = "UI (User Interface)"
description = "Demonstrates how to create a node with a shadow"
name = "Box Shadow"
wasm = true

[package.metadata.example.breakout]
category = "Games"
description = 'An implementation of the classic game "Breakout".'
name = "Breakout"
wasm = true

[package.metadata.example.button]
category = "UI (User Interface)"
description = "Illustrates creating and updating a button"
name = "Button"
wasm = true

[package.metadata.example.camera_controller]
category = "Helpers"
description = "Example Free-Cam Styled Camera Controller"
name = "Camera Controller"
wasm = true

[package.metadata.example.camera_orbit]
category = "Camera"
description = "Shows how to orbit a static scene using pitch, yaw, and roll."
name = "Camera Orbit"
wasm = true

[package.metadata.example.camera_sub_view]
category = "3D Rendering"
description = "Demonstrates using different sub view effects on a camera"
name = "Camera sub view"
wasm = true

[package.metadata.example.change_detection]
category = "ECS (Entity Component System)"
description = "Change detection on components and resources"
name = "Change Detection"
wasm = false

[package.metadata.example.char_input_events]
category = "Input"
description = "Prints out all chars as they are inputted"
name = "Char Input Events"
wasm = false

[package.metadata.example.clear_color]
category = "Window"
description = "Creates a solid color window"
name = "Clear Color"
wasm = true

[package.metadata.example.clearcoat]
category = "3D Rendering"
description = "Demonstrates the clearcoat PBR feature"
name = "Clearcoat"
wasm = false

[package.metadata.example.client]
category = "Remote Protocol"
description = "A simple command line client that can control Bevy apps via the BRP"
name = "client"
wasm = false

[package.metadata.example.clustered_decals]
category = "3D Rendering"
description = "Demonstrates clustered decals"
name = "Clustered Decals"
wasm = false

[package.metadata.example.color_animation]
category = "Animation"
description = "Demonstrates how to animate colors using mixing and splines in different color spaces"
name = "Color animation"
wasm = true

[package.metadata.example.color_grading]
category = "3D Rendering"
description = "Demonstrates color grading"
name = "Color grading"
wasm = true

[package.metadata.example.component_hooks]
category = "ECS (Entity Component System)"
description = "Define component hooks to manage component lifecycle events"
name = "Component Hooks"
wasm = false

[package.metadata.example.compute_shader_game_of_life]
category = "Shaders"
description = "A compute shader that simulates Conway's Game of Life"
name = "Compute - Game of Life"
wasm = false

[package.metadata.example.computed_states]
category = "State"
description = "Advanced state patterns using Computed States."
name = "Computed States"
wasm = false

[package.metadata.example.contributors]
category = "Games"
description = "Displays each contributor as a bouncy bevy-ball!"
name = "Contributors"
wasm = true

[package.metadata.example.cpu_draw]
category = "2D Rendering"
description = "Manually read/write the pixels of a texture"
name = "CPU Drawing"
wasm = true

[package.metadata.example.cubic_splines]
category = "Math"
description = "Exhibits different modes of constructing cubic curves using splines"
name = "Cubic Splines"
wasm = true

[package.metadata.example.custom_asset]
category = "Assets"
description = "Implements a custom asset loader"
name = "Custom Asset"
wasm = true

[package.metadata.example.custom_asset_reader]
category = "Assets"
description = "Implements a custom AssetReader"
name = "Custom Asset IO"
wasm = false

[package.metadata.example.custom_attributes]
category = "Reflection"
description = "Registering and accessing custom attributes on reflected types"
name = "Custom Attributes"
wasm = false

[package.metadata.example.custom_cursor_image]
category = "Window"
description = "Demonstrates creating an animated custom cursor from an image"
name = "Custom Cursor Image"
wasm = true

[package.metadata.example.custom_diagnostic]
category = "Diagnostics"
description = "Shows how to create a custom diagnostic"
name = "Custom Diagnostic"
wasm = true

[package.metadata.example.custom_gltf_vertex_attribute]
category = "2D Rendering"
description = "Renders a glTF mesh in 2D with a custom vertex attribute"
name = "Custom glTF vertex attribute 2D"
wasm = true

[package.metadata.example.custom_loop]
category = "Application"
description = "Demonstrates how to create a custom runner (to update an app manually)"
name = "Custom Loop"
wasm = false

[package.metadata.example.custom_phase_item]
category = "Shaders"
description = "Demonstrates how to enqueue custom draw commands in a render phase"
name = "Custom phase item"
wasm = true

[package.metadata.example.custom_post_processing]
category = "Shaders"
description = "A custom post processing effect, using a custom render pass that runs after the main pass"
name = "Post Processing - Custom Render Pass"
wasm = true

[package.metadata.example.custom_primitives]
category = "Math"
description = "Demonstrates how to add custom primitives and useful traits for them."
name = "Custom Primitives"
wasm = true

[package.metadata.example.custom_projection]
category = "Camera"
description = "Shows how to create custom camera projections."
name = "Custom Projection"
wasm = true

[package.metadata.example.custom_query_param]
category = "ECS (Entity Component System)"
description = "Groups commonly used compound queries and query filters into a single type"
name = "Custom Query Parameters"
wasm = false

[package.metadata.example.custom_render_phase]
category = "Shaders"
description = "Shows how to make a complete render phase"
name = "Custom Render Phase"
wasm = true

[package.metadata.example.custom_schedule]
category = "ECS (Entity Component System)"
description = "Demonstrates how to add custom schedules"
name = "Custom Schedule"
wasm = false

[package.metadata.example.custom_shader_instancing]
category = "Shaders"
description = "A shader that renders a mesh multiple times in one draw call using low level rendering api"
name = "Instancing"
wasm = true

[package.metadata.example.custom_skinned_mesh]
category = "Animation"
description = "Skinned mesh example with mesh and joints data defined in code"
name = "Custom Skinned Mesh"
wasm = true

[package.metadata.example.custom_transitions]
category = "State"
description = "Creating and working with custom state transition schedules."
name = "Custom State Transition Behavior"
wasm = false

[package.metadata.example.custom_user_event]
category = "Window"
description = "Handles custom user events within the event loop"
name = "Custom User Event"
wasm = true

[package.metadata.example.custom_vertex_attribute]
category = "Shaders"
description = "A shader that reads a mesh's custom vertex attribute"
name = "Custom Vertex Attribute"
wasm = true

[package.metadata.example.debug_picking]
category = "Picking"
description = "Demonstrates picking debug overlay"
name = "Picking Debug Tools"
wasm = true

[package.metadata.example.decal]
category = "3D Rendering"
description = "Decal rendering"
name = "Decal"
wasm = true

[package.metadata.example.decodable]
category = "Audio"
description = "Shows how to create and register a custom audio source by implementing the `Decodable` type."
name = "Decodable"
wasm = true

[package.metadata.example.deferred_rendering]
category = "3D Rendering"
description = "Renders meshes with both forward and deferred pipelines"
name = "Deferred Rendering"
wasm = true

[package.metadata.example.depth_of_field]
category = "3D Rendering"
description = "Demonstrates depth of field"
name = "Depth of field"
wasm = false

[package.metadata.example.desk_toy]
category = "Games"
description = "Bevy logo as a desk toy using transparent windows! Now with Googly Eyes!"
name = "Desk Toy"
wasm = false

[package.metadata.example.directional_navigation]
category = "UI (User Interface)"
description = "Demonstration of Directional Navigation between UI elements"
name = "Directional Navigation"
wasm = true

[package.metadata.example.display_and_visibility]
category = "UI (User Interface)"
description = "Demonstrates how Display and Visibility work in the UI."
name = "Display and Visibility"
wasm = true

[package.metadata.example.drag_and_drop]
category = "Application"
description = "An example that shows how to handle drag and drop in an app"
name = "Drag and Drop"
wasm = false

[package.metadata.example.dynamic]
category = "ECS (Entity Component System)"
description = "Dynamically create components, spawn entities with those components and query those components"
name = "Dynamic ECS"
wasm = false

[package.metadata.example.dynamic_types]
category = "Reflection"
description = "How dynamic types are used with reflection"
name = "Dynamic Types"
wasm = false

[package.metadata.example.eased_motion]
category = "Animation"
description = "Demonstrates the application of easing curves to animate an object"
name = "Eased Motion"
wasm = true

[package.metadata.example.easing_functions]
category = "Animation"
description = "Showcases the built-in easing functions"
name = "Easing Functions"
wasm = true

[package.metadata.example.ecs_guide]
category = "ECS (Entity Component System)"
description = "Full guide to Bevy's ECS"
name = "ECS Guide"
wasm = false

[package.metadata.example.edit_material_on_gltf]
category = "3D Rendering"
description = "Showcases changing materials of a Gltf after Scene spawn"
name = "Edit Gltf Material"
wasm = true

[package.metadata.example.embedded_asset]
category = "Assets"
description = "Embed an asset in the application binary and load it"
name = "Embedded Asset"
wasm = true

[package.metadata.example.empty]
category = "Application"
description = "An empty application (does nothing)"
name = "Empty"
wasm = false

[package.metadata.example.empty_defaults]
category = "Application"
description = "An empty application with default plugins"
name = "Empty with Defaults"
wasm = true

[package.metadata.example.enabling_disabling_diagnostic]
category = "Diagnostics"
description = "Shows how to disable/re-enable a Diagnostic during runtime"
name = "Enabling/disabling diagnostic"
wasm = true

[package.metadata.example.entity_disabling]
category = "ECS (Entity Component System)"
description = "Demonstrates how to hide entities from the ECS without deleting them"
name = "Entity disabling"
wasm = true

[package.metadata.example.error_handling]
category = "ECS (Entity Component System)"
description = "How to return and handle errors across the ECS"
name = "Error handling"
wasm = false

[package.metadata.example.event]
category = "ECS (Entity Component System)"
description = "Illustrates event creation, activation, and reception"
name = "Event"
wasm = false

[package.metadata.example.extended_material]
category = "Shaders"
description = "A custom shader that builds on the standard material"
name = "Extended Material"
wasm = true

[package.metadata.example.extended_material_bindless]
category = "Shaders"
description = "Demonstrates bindless `ExtendedMaterial`"
name = "Extended Bindless Material"
wasm = false

[package.metadata.example.external_source_external_thread]
category = "Async Tasks"
description = "How to use an external thread to run an infinite task and communicate with a channel"
name = "External Source of Data on an External Thread"
wasm = false

[package.metadata.example.extra_asset_source]
category = "Assets"
description = "Load an asset from a non-standard asset source"
name = "Extra asset source"
wasm = false

[package.metadata.example.fallback_image]
hidden = true

[package.metadata.example.fallible_params]
category = "ECS (Entity Component System)"
description = "Systems are skipped if their parameters cannot be acquired"
name = "Fallible System Parameters"
wasm = false

[package.metadata.example.first_person_view_model]
category = "Camera"
description = "A first-person camera that uses a world model and a view model with different field of views (FOV)"
name = "First person view model"
wasm = true

[package.metadata.example.fixed_timestep]
category = "ECS (Entity Component System)"
description = "Shows how to create systems that run every fixed timestep, rather than every tick"
name = "Fixed Timestep"
wasm = false

[package.metadata.example.flex_layout]
category = "UI (User Interface)"
description = "Demonstrates how the AlignItems and JustifyContent properties can be composed to layout nodes and position text"
name = "Flex Layout"
wasm = true

[package.metadata.example.fog]
category = "3D Rendering"
description = "A scene showcasing the distance fog effect"
name = "Fog"
wasm = true

[package.metadata.example.fog_volumes]
category = "3D Rendering"
description = "Demonstrates fog volumes"
name = "Fog volumes"
wasm = false

[package.metadata.example.font_atlas_debug]
category = "UI (User Interface)"
description = "Illustrates how FontAtlases are populated (used to optimize text rendering internally)"
name = "Font Atlas Debug"
wasm = true

[package.metadata.example.fps_overlay]
category = "Dev tools"
description = "Demonstrates FPS overlay"
name = "FPS overlay"
wasm = true

[package.metadata.example.function_reflection]
category = "Reflection"
description = "Demonstrates how functions can be called dynamically using reflection"
name = "Function Reflection"
wasm = false

[package.metadata.example.game_menu]
category = "Games"
description = "A simple game menu"
name = "Game Menu"
wasm = true

[package.metadata.example.gamepad_input]
category = "Input"
description = "Shows handling of gamepad input, connections, and disconnections"
name = "Gamepad Input"
wasm = false

[package.metadata.example.gamepad_input_events]
category = "Input"
description = "Iterates and prints gamepad input and connection events"
name = "Gamepad Input Events"
wasm = false

[package.metadata.example.gamepad_rumble]
category = "Input"
description = "Shows how to rumble a gamepad using force feedback"
name = "Gamepad Rumble"
wasm = false

[package.metadata.example.gamepad_viewer]
category = "Tools"
description = "Shows a visualization of gamepad buttons, sticks, and triggers"
name = "Gamepad Viewer"
wasm = true

[package.metadata.example.generate_custom_mesh]
category = "3D Rendering"
description = "Simple showcase of how to generate a custom mesh with a custom texture"
name = "Generate Custom Mesh"
wasm = true

[package.metadata.example.generic_reflection]
category = "Reflection"
description = "Registers concrete instances of generic types that may be used with reflection"
name = "Generic Reflection"
wasm = false

[package.metadata.example.generic_system]
category = "ECS (Entity Component System)"
description = "Shows how to create systems that can be reused with different types"
name = "Generic System"
wasm = false

[package.metadata.example.ghost_nodes]
category = "UI (User Interface)"
description = "Demonstrates the use of Ghost Nodes to skip entities in the UI layout hierarchy"
name = "Ghost Nodes"
wasm = true

[package.metadata.example.gltf_skinned_mesh]
category = "Animation"
description = "Skinned mesh example with mesh and joints data loaded from a glTF file"
name = "glTF Skinned Mesh"
wasm = true

[package.metadata.example.gpu_readback]
category = "Shaders"
description = "A very simple compute shader that writes to a buffer that is read by the cpu"
name = "GPU readback"
wasm = false

[package.metadata.example.grid]
category = "UI (User Interface)"
description = "An example for CSS Grid layout"
name = "CSS Grid"
wasm = true

[package.metadata.example.headless]
category = "Application"
description = "An application that runs without default plugins"
name = "Headless"
wasm = false

[package.metadata.example.headless_renderer]
category = "Application"
description = "An application that runs with no window, but renders into image file"
name = "Headless Renderer"
wasm = false

[package.metadata.example.hello_world]
hidden = true

[package.metadata.example.hierarchy]
category = "ECS (Entity Component System)"
description = "Creates a hierarchy of parents and children entities"
name = "Hierarchy"
wasm = false

[package.metadata.example.hot_asset_reloading]
category = "Assets"
description = "Demonstrates automatic reloading of assets when modified on disk"
name = "Hot Reloading of Assets"
wasm = false

[package.metadata.example.immutable_components]
category = "ECS (Entity Component System)"
description = "Demonstrates the creation and utility of immutable components"
name = "Immutable Components"
wasm = false

[package.metadata.example.irradiance_volumes]
category = "3D Rendering"
description = "Demonstrates irradiance volumes"
name = "Irradiance Volumes"
wasm = false

[package.metadata.example.iter_combinations]
category = "ECS (Entity Component System)"
description = "Shows how to iterate over combinations of query results"
name = "Iter Combinations"
wasm = true

[package.metadata.example.keyboard_input]
category = "Input"
description = "Demonstrates handling a key press/release"
name = "Keyboard Input"
wasm = false

[package.metadata.example.keyboard_input_events]
category = "Input"
description = "Prints out all keyboard events"
name = "Keyboard Input Events"
wasm = false

[package.metadata.example.keyboard_modifiers]
category = "Input"
description = "Demonstrates using key modifiers (ctrl, shift)"
name = "Keyboard Modifiers"
wasm = false

[package.metadata.example.light_gizmos]
category = "Gizmos"
description = "A scene showcasing light gizmos"
name = "Light Gizmos"
wasm = true

[package.metadata.example.lighting]
category = "3D Rendering"
description = "Illustrates various lighting options in a simple scene"
name = "Lighting"
wasm = true

[package.metadata.example.lightmaps]
category = "3D Rendering"
description = "Rendering a scene with baked lightmaps"
name = "Lightmaps"
wasm = false

[package.metadata.example.lines]
category = "3D Rendering"
description = "Create a custom material to draw 3d lines"
name = "Lines"
wasm = false

[package.metadata.example.load_gltf]
category = "3D Rendering"
description = "Loads and renders a glTF file as a scene"
name = "Load glTF"
wasm = true

[package.metadata.example.load_gltf_extras]
category = "3D Rendering"
description = "Loads and renders a glTF file as a scene, including the gltf extras"
name = "Load glTF extras"
wasm = true

[package.metadata.example.loading_screen]
category = "Games"
description = "Demonstrates how to create a loading screen that waits for all assets to be loaded and render pipelines to be compiled."
name = "Loading Screen"
wasm = true

[package.metadata.example.log_diagnostics]
category = "Diagnostics"
description = "Add a plugin that logs diagnostics, like frames per second (FPS), to the console"
name = "Log Diagnostics"
wasm = true

[package.metadata.example.log_layers]
category = "Application"
description = "Illustrate how to add custom log layers"
name = "Log layers"
wasm = false

[package.metadata.example.log_layers_ecs]
category = "Application"
description = "Illustrate how to transfer data between log layers and Bevy's ECS"
name = "Advanced log layers"
wasm = false

[package.metadata.example.logs]
category = "Application"
description = "Illustrate how to use generate log output"
name = "Logs"
wasm = true

[package.metadata.example.low_power]
category = "Window"
description = "Demonstrates settings to reduce power use for bevy applications"
name = "Low Power"
wasm = true

[package.metadata.example.many_animated_sprites]
category = "Stress Tests"
description = "Displays many animated sprites in a grid arrangement with slight offsets to their animation timers. Used for performance testing."
name = "Many Animated Sprites"
wasm = true

[package.metadata.example.many_buttons]
category = "Stress Tests"
description = "Test rendering of many UI elements"
name = "Many Buttons"
wasm = true

[package.metadata.example.many_cameras_lights]
category = "Stress Tests"
description = "Test rendering of many cameras and lights"
name = "Many Cameras & Lights"
wasm = true

[package.metadata.example.many_components]
category = "Stress Tests"
description = "Test large ECS systems"
name = "Many Components (and Entities and Systems)"
wasm = false

[package.metadata.example.many_cubes]
category = "Stress Tests"
description = "Simple benchmark to test per-entity draw overhead. Run with the `sphere` argument to test frustum culling"
name = "Many Cubes"
wasm = true

[package.metadata.example.many_foxes]
category = "Stress Tests"
description = "Loads an animated fox model and spawns lots of them. Good for testing skinned mesh performance. Takes an unsigned integer argument for the number of foxes to spawn. Defaults to 1000"
name = "Many Foxes"
wasm = true

[package.metadata.example.many_gizmos]
category = "Stress Tests"
description = "Test rendering of many gizmos"
name = "Many Gizmos"
wasm = true

[package.metadata.example.many_glyphs]
category = "Stress Tests"
description = "Simple benchmark to test text rendering."
name = "Many Glyphs"
wasm = true

[package.metadata.example.many_lights]
category = "Stress Tests"
description = "Simple benchmark to test rendering many point lights. Run with `WGPU_SETTINGS_PRIO=webgl2` to restrict to uniform buffers and max 256 lights"
name = "Many Lights"
wasm = true

[package.metadata.example.many_materials]
category = "Stress Tests"
description = "Benchmark to test rendering many animated materials"
name = "Many Animated Materials"
wasm = true

[package.metadata.example.many_sprites]
category = "Stress Tests"
description = "Displays many sprites in a grid arrangement! Used for performance testing. Use `--colored` to enable color tinted sprites."
name = "Many Sprites"
wasm = true

[package.metadata.example.many_text2d]
category = "Stress Tests"
description = "Displays many Text2d! Used for performance testing."
name = "Many Text2d"
wasm = true

[package.metadata.example.mesh2d]
category = "2D Rendering"
description = "Renders a 2d mesh"
name = "Mesh 2D"
wasm = true

[package.metadata.example.mesh2d_alpha_mode]
category = "2D Rendering"
description = "Used to test alpha modes with mesh2d"
name = "Mesh2d Alpha Mode"
wasm = true

[package.metadata.example.mesh2d_arcs]
category = "2D Rendering"
description = "Demonstrates UV-mapping of the circular segment and sector primitives"
name = "Arc 2D Meshes"
wasm = true

[package.metadata.example.mesh2d_manual]
category = "2D Rendering"
description = 'Renders a custom mesh "manually" with "mid-level" renderer apis'
name = "Manual Mesh 2D"
wasm = true

[package.metadata.example.mesh2d_repeated_texture]
category = "2D Rendering"
description = "Showcase of using `uv_transform` on the `ColorMaterial` of a `Mesh2d`"
name = "Mesh2d Repeated Texture"
wasm = true

[package.metadata.example.mesh2d_vertex_color_texture]
category = "2D Rendering"
description = "Renders a 2d mesh with vertex color attributes"
name = "Mesh 2D With Vertex Colors"
wasm = true

[package.metadata.example.mesh_picking]
category = "Picking"
description = "Demonstrates picking meshes"
name = "Mesh Picking"
wasm = true

[package.metadata.example.mesh_ray_cast]
category = "3D Rendering"
description = "Demonstrates ray casting with the `MeshRayCast` system parameter"
name = "Mesh Ray Cast"
wasm = true

[package.metadata.example.meshlet]
category = "3D Rendering"
description = "Meshlet rendering for dense high-poly scenes (experimental)"
name = "Meshlet"
setup = [
    [
    "mkdir",
    "-p",
    "assets/external/models",
],
    [
    "curl",
    "-o",
    "assets/external/models/bunny.meshlet_mesh",
    "https://raw.githubusercontent.com/JMS55/bevy_meshlet_asset/7a7c14138021f63904b584d5f7b73b695c7f4bbf/bunny.meshlet_mesh",
],
]
wasm = false

[package.metadata.example.minimizing]
hidden = true

[package.metadata.example.mixed_lighting]
category = "3D Rendering"
description = "Demonstrates how to combine baked and dynamic lighting"
name = "Mixed lighting"
wasm = true

[package.metadata.example.monitor_info]
category = "Window"
description = "Displays information about available monitors (displays)."
name = "Monitor info"
wasm = false

[package.metadata.example.morph_targets]
category = "Animation"
description = "Plays an animation from a glTF file with meshes with morph targets"
name = "Morph Targets"
wasm = true

[package.metadata.example.motion_blur]
category = "3D Rendering"
description = "Demonstrates per-pixel motion blur"
name = "Motion Blur"
wasm = true

[package.metadata.example.mouse_grab]
category = "Input"
description = "Demonstrates how to grab the mouse, locking the cursor to the app's screen"
name = "Mouse Grab"
wasm = false

[package.metadata.example.mouse_input]
category = "Input"
description = "Demonstrates handling a mouse button press/release"
name = "Mouse Input"
wasm = false

[package.metadata.example.mouse_input_events]
category = "Input"
description = "Prints out all mouse events (buttons, movement, etc.)"
name = "Mouse Input Events"
wasm = false

[package.metadata.example.move_sprite]
category = "2D Rendering"
description = "Changes the transform of a sprite"
name = "Move Sprite"
wasm = true

[package.metadata.example.multi_asset_sync]
category = "Assets"
description = "Demonstrates how to wait for multiple assets to be loaded."
name = "Multi-asset synchronization"
wasm = true

[package.metadata.example.multiple_windows]
category = "Window"
description = "Demonstrates creating multiple windows, and rendering to them"
name = "Multiple Windows"
wasm = false

[package.metadata.example.no_prepass]
hidden = true

[package.metadata.example.no_renderer]
category = "Application"
description = "An application that runs with default plugins and displays an empty window, but without an actual renderer"
name = "No Renderer"
wasm = false

[package.metadata.example.no_std_library]
category = "Embedded"
description = "Example library compatible with `std` and `no_std` targets"
name = "`no_std` Compatible Library"
wasm = true

[package.metadata.example.nondeterministic_system_order]
category = "ECS (Entity Component System)"
description = "Systems run in parallel, but their order isn't always deterministic. Here's how to detect and fix this."
name = "Nondeterministic System Order"
wasm = false

[package.metadata.example.observer_propagation]
category = "ECS (Entity Component System)"
description = "Demonstrates event propagation with observers"
name = "Observer Propagation"
wasm = true

[package.metadata.example.observers]
category = "ECS (Entity Component System)"
description = "Demonstrates observers that react to events (both built-in life-cycle events and custom events)"
name = "Observers"
wasm = true

[package.metadata.example.occlusion_culling]
category = "3D Rendering"
description = "Demonstration of Occlusion Culling"
name = "Occlusion Culling"
wasm = false

[package.metadata.example.one_shot_systems]
category = "ECS (Entity Component System)"
description = "Shows how to flexibly run systems without scheduling them"
name = "One Shot Systems"
wasm = false

[package.metadata.example.order_independent_transparency]
category = "3D Rendering"
description = "Demonstrates how to use OIT"
name = "Order Independent Transparency"
wasm = false

[package.metadata.example.orthographic]
category = "3D Rendering"
description = "Shows how to create a 3D orthographic view (for isometric-look in games or CAD applications)"
name = "Orthographic View"
wasm = true

[package.metadata.example.overflow]
category = "UI (User Interface)"
description = "Simple example demonstrating overflow behavior"
name = "Overflow"
wasm = true

[package.metadata.example.overflow_clip_margin]
category = "UI (User Interface)"
description = "Simple example demonstrating the OverflowClipMargin style property"
name = "Overflow Clip Margin"
wasm = true

[package.metadata.example.overflow_debug]
category = "UI (User Interface)"
description = "An example to debug overflow and clipping behavior"
name = "Overflow and Clipping Debug"
wasm = true

[package.metadata.example.parallax_mapping]
category = "3D Rendering"
description = "Demonstrates use of a normal map and depth map for parallax mapping"
name = "Parallax Mapping"
wasm = true

[package.metadata.example.parallel_query]
category = "ECS (Entity Component System)"
description = "Illustrates parallel queries with `ParallelIterator`"
name = "Parallel Query"
wasm = false

[package.metadata.example.parenting]
category = "3D Rendering"
description = "Demonstrates parent->child relationships and relative transformations"
name = "Parenting"
wasm = true

[package.metadata.example.pbr]
category = "3D Rendering"
description = "Demonstrates use of Physically Based Rendering (PBR) properties"
name = "Physically Based Rendering"
wasm = true

[package.metadata.example.pcss]
category = "3D Rendering"
description = "Demonstrates percentage-closer soft shadows (PCSS)"
name = "Percentage-closer soft shadows"
wasm = false

[package.metadata.example.physics_in_fixed_timestep]
category = "Movement"
description = "Handles input, physics, and rendering in an industry-standard way by using a fixed timestep"
name = "Run physics in a fixed timestep"
wasm = true

[package.metadata.example.pitch]
category = "Audio"
description = "Shows how to directly play a simple pitch"
name = "Pitch"
wasm = true

[package.metadata.example.pixel_grid_snap]
category = "2D Rendering"
description = "Shows how to create graphics that snap to the pixel grid by rendering to a texture in 2D"
name = "Pixel Grid Snapping"
wasm = true

[package.metadata.example.plugin]
category = "Application"
description = "Demonstrates the creation and registration of a custom plugin"
name = "Plugin"
wasm = true

[package.metadata.example.plugin_group]
category = "Application"
description = "Demonstrates the creation and registration of a custom plugin group"
name = "Plugin Group"
wasm = true

[package.metadata.example.post_processing]
category = "3D Rendering"
description = "Demonstrates the built-in postprocessing features"
name = "Built-in postprocessing"
wasm = true

[package.metadata.example.projection_zoom]
category = "Camera"
description = "Shows how to zoom orthographic and perspective projection cameras."
name = "Projection Zoom"
wasm = true

[package.metadata.example.query_gltf_primitives]
category = "3D Rendering"
description = "Query primitives in a glTF scene"
name = "Query glTF primitives"
wasm = true

[package.metadata.example.random_sampling]
category = "Math"
description = "Demonstrates how to sample random points from mathematical primitives"
name = "Random Sampling"
wasm = true

[package.metadata.example.reflection]
category = "Reflection"
description = "Demonstrates how reflection in Bevy provides a way to dynamically interact with Rust types"
name = "Reflection"
wasm = false

[package.metadata.example.reflection_probes]
category = "3D Rendering"
description = "Demonstrates reflection probes"
name = "Reflection Probes"
wasm = false

[package.metadata.example.reflection_types]
category = "Reflection"
description = "Illustrates the various reflection types available"
name = "Reflection Types"
wasm = false

[package.metadata.example.relationships]
category = "ECS (Entity Component System)"
description = "Define and work with custom relationships between entities"
name = "Relationships"
wasm = false

[package.metadata.example.relative_cursor_position]
category = "UI (User Interface)"
description = "Showcases the RelativeCursorPosition component"
name = "Relative Cursor Position"
wasm = true

[package.metadata.example.removal_detection]
category = "ECS (Entity Component System)"
description = "Query for entities that had a specific component removed earlier in the current frame"
name = "Removal Detection"
wasm = false

[package.metadata.example.render_primitives]
category = "Math"
description = "Shows off rendering for all math primitives as both Meshes and Gizmos"
name = "Rendering Primitives"
wasm = true

[package.metadata.example.render_to_texture]
category = "3D Rendering"
description = "Shows how to render to a texture, useful for mirrors, UI, or exporting images"
name = "Render to Texture"
wasm = true

[package.metadata.example.render_ui_to_texture]
category = "UI (User Interface)"
description = "An example of rendering UI as a part of a 3D world"
name = "Render UI to Texture"
wasm = true

[package.metadata.example.repeated_texture]
category = "Assets"
description = "How to configure the texture to repeat instead of the default clamp to edges"
name = "Repeated texture configuration"
wasm = true

[package.metadata.example.resizing]
hidden = true

[package.metadata.example.return_after_run]
category = "Application"
description = "Show how to return to main after the Bevy app has exited"
name = "Return after Run"
wasm = false

[package.metadata.example.rotate_environment_map]
category = "3D Rendering"
description = "Demonstrates how to rotate the skybox and the environment map simultaneously"
name = "Rotate Environment Map"
wasm = false

[package.metadata.example.rotation]
category = "2D Rendering"
description = "Demonstrates rotating entities in 2D with quaternions"
name = "2D Rotation"
wasm = true

[package.metadata.example.run_conditions]
category = "ECS (Entity Component System)"
description = "Run systems only when one or multiple conditions are met"
name = "Run Conditions"
wasm = false

[package.metadata.example.sampling_primitives]
category = "Math"
description = "Demonstrates all the primitives which can be sampled."
name = "Sampling Primitives"
wasm = true

[package.metadata.example.scale]
category = "Transforms"
description = "Illustrates how to scale an object in each direction"
name = "Scale"
wasm = true

[package.metadata.example.scale_factor_override]
category = "Window"
description = "Illustrates how to customize the default window settings"
name = "Scale Factor Override"
wasm = true

[package.metadata.example.scene]
category = "Scene"
description = "Demonstrates loading from and saving scenes to files"
name = "Scene"
wasm = false

[package.metadata.example.scene_viewer]
category = "Tools"
description = "A simple way to view glTF models with Bevy. Just run `cargo run --release --example scene_viewer /path/to/model.gltf#Scene0`, replacing the path as appropriate. With no arguments it will load the FieldHelmet glTF model from the repository assets subdirectory"
name = "Scene Viewer"
wasm = true

[package.metadata.example.screenshot]
category = "Window"
description = "Shows how to save screenshots to disk"
name = "Screenshot"
wasm = true

[package.metadata.example.scroll]
category = "UI (User Interface)"
description = "Demonstrates scrolling UI containers"
name = "Scroll"
wasm = true

[package.metadata.example.scrolling_fog]
category = "3D Rendering"
description = "Demonstrates how to create the effect of fog moving in the wind"
name = "Scrolling fog"
wasm = false

[package.metadata.example.send_and_receive_events]
category = "ECS (Entity Component System)"
description = "Demonstrates how to send and receive events of the same type in a single system"
name = "Send and receive events"
wasm = false

[package.metadata.example.server]
category = "Remote Protocol"
description = "A Bevy app that you can connect to with the BRP and edit"
name = "server"
wasm = false

[package.metadata.example.shader_defs]
category = "Shaders"
description = 'A shader that uses "shaders defs" (a bevy tool to selectively toggle parts of a shader)'
name = "Shader Defs"
wasm = true

[package.metadata.example.shader_material]
category = "Shaders"
description = "A shader and a material that uses it"
name = "Material"
wasm = true

[package.metadata.example.shader_material_2d]
category = "Shaders"
description = "A shader and a material that uses it on a 2d mesh"
name = "Material"
wasm = true

[package.metadata.example.shader_material_bindless]
category = "Shaders"
description = "Demonstrates how to make materials that use bindless textures"
name = "Material - Bindless"
wasm = true

[package.metadata.example.shader_material_glsl]
category = "Shaders"
description = "A shader that uses the GLSL shading language"
name = "Material - GLSL"
wasm = true

[package.metadata.example.shader_material_screenspace_texture]
category = "Shaders"
description = "A shader that samples a texture with view-independent UV coordinates"
name = "Material - Screenspace Texture"
wasm = true

[package.metadata.example.shader_material_wesl]
category = "Shaders"
description = "A shader that uses WESL"
name = "Material - WESL"
wasm = true

[package.metadata.example.shader_prepass]
category = "Shaders"
description = "A shader that uses the various textures generated by the prepass"
name = "Material Prepass"
wasm = false

[package.metadata.example.shadow_biases]
category = "3D Rendering"
description = "Demonstrates how shadow biases affect shadows in a 3d scene"
name = "Shadow Biases"
wasm = true

[package.metadata.example.shadow_caster_receiver]
category = "3D Rendering"
description = "Demonstrates how to prevent meshes from casting/receiving shadows in a 3d scene"
name = "Shadow Caster and Receiver"
wasm = true

[package.metadata.example.simple_picking]
category = "Picking"
description = "Demonstrates how to use picking events to spawn simple objects"
name = "Showcases simple picking events and usage"
wasm = true

[package.metadata.example.size_constraints]
category = "UI (User Interface)"
description = "Demonstrates how the to use the size constraints to control the size of a UI node."
name = "Size Constraints"
wasm = true

[package.metadata.example.skybox]
category = "3D Rendering"
description = "Load a cubemap texture onto a cube like a skybox and cycle through different compressed texture formats."
name = "Skybox"
wasm = false

[package.metadata.example.smooth_follow]
category = "Math"
description = "Demonstrates how to make an entity smoothly follow another using interpolation"
name = "Smooth Follow"
wasm = true

[package.metadata.example.soundtrack]
category = "Audio"
description = "Shows how to play different soundtracks based on game state"
name = "Soundtrack"
wasm = true

[package.metadata.example.spatial_audio_2d]
category = "Audio"
description = "Shows how to play spatial audio, and moving the emitter in 2D"
name = "Spatial Audio 2D"
wasm = true

[package.metadata.example.spatial_audio_3d]
category = "Audio"
description = "Shows how to play spatial audio, and moving the emitter in 3D"
name = "Spatial Audio 3D"
wasm = true

[package.metadata.example.specialized_mesh_pipeline]
category = "Shaders"
description = "Demonstrates how to write a specialized mesh pipeline"
name = "Specialized Mesh Pipeline"
wasm = true

[package.metadata.example.specular_tint]
category = "3D Rendering"
description = "Demonstrates specular tints and maps"
name = "Specular Tint"
wasm = true

[package.metadata.example.spherical_area_lights]
category = "3D Rendering"
description = "Demonstrates how point light radius values affect light behavior"
name = "Spherical Area Lights"
wasm = true

[package.metadata.example.split_screen]
category = "3D Rendering"
description = 'Demonstrates how to render two cameras to the same window to accomplish "split screen"'
name = "Split Screen"
wasm = true

[package.metadata.example.spotlight]
category = "3D Rendering"
description = "Illustrates spot lights"
name = "Spotlight"
wasm = true

[package.metadata.example.sprite]
category = "2D Rendering"
description = "Renders a sprite"
name = "Sprite"
wasm = true

[package.metadata.example.sprite_animation]
category = "2D Rendering"
description = "Animates a sprite in response to an event"
name = "Sprite Animation"
wasm = true

[package.metadata.example.sprite_flipping]
category = "2D Rendering"
description = "Renders a sprite flipped along an axis"
name = "Sprite Flipping"
wasm = true

[package.metadata.example.sprite_picking]
category = "Picking"
description = "Demonstrates picking sprites and sprite atlases"
name = "Sprite Picking"
wasm = true

[package.metadata.example.sprite_scale]
category = "2D Rendering"
description = "Shows how a sprite can be scaled into a rectangle while keeping the aspect ratio"
name = "Sprite Scale"
wasm = true

[package.metadata.example.sprite_sheet]
category = "2D Rendering"
description = "Renders an animated sprite"
name = "Sprite Sheet"
wasm = true

[package.metadata.example.sprite_slice]
category = "2D Rendering"
description = "Showcases slicing sprites into sections that can be scaled independently via the 9-patch technique"
name = "Sprite Slice"
wasm = true

[package.metadata.example.sprite_tile]
category = "2D Rendering"
description = "Renders a sprite tiled in a grid"
name = "Sprite Tile"
wasm = true

[package.metadata.example.ssao]
category = "3D Rendering"
description = "A scene showcasing screen space ambient occlusion"
name = "Screen Space Ambient Occlusion"
wasm = false

[package.metadata.example.ssr]
category = "3D Rendering"
description = "Demonstrates screen space reflections with water ripples"
name = "Screen Space Reflections"
wasm = false

[package.metadata.example.startup_system]
category = "ECS (Entity Component System)"
description = "Demonstrates a startup system (one that runs once when the app starts up)"
name = "Startup System"
wasm = false

[package.metadata.example.states]
category = "State"
description = "Illustrates how to use States to control transitioning from a Menu state to an InGame state."
name = "States"
wasm = false

[package.metadata.example.storage_buffer]
category = "Shaders"
description = "A shader that shows how to bind a storage buffer using a custom material."
name = "Storage Buffer"
wasm = true

[package.metadata.example.sub_states]
category = "State"
description = "Using Sub States for hierarchical state handling."
name = "Sub States"
wasm = false

[package.metadata.example.system_closure]
category = "ECS (Entity Component System)"
description = "Show how to use closures as systems, and how to configure `Local` variables by capturing external state"
name = "System Closure"
wasm = false

[package.metadata.example.system_param]
category = "ECS (Entity Component System)"
description = "Illustrates creating custom system parameters with `SystemParam`"
name = "System Parameter"
wasm = false

[package.metadata.example.system_piping]
category = "ECS (Entity Component System)"
description = "Pipe the output of one system into a second, allowing you to handle any errors gracefully"
name = "System Piping"
wasm = false

[package.metadata.example.system_stepping]
category = "ECS (Entity Component System)"
description = "Demonstrate stepping through systems in order of execution."
name = "System Stepping"
wasm = false

[package.metadata.example.tab_navigation]
category = "UI (User Interface)"
description = "Demonstration of Tab Navigation between UI elements"
name = "Tab Navigation"
wasm = true

[package.metadata.example.testbed_2d]
hidden = true

[package.metadata.example.testbed_3d]
hidden = true

[package.metadata.example.testbed_full_ui]
hidden = true

[package.metadata.example.testbed_ui]
hidden = true

[package.metadata.example.text]
category = "UI (User Interface)"
description = "Illustrates creating and updating text"
name = "Text"
wasm = true

[package.metadata.example.text2d]
category = "2D Rendering"
description = "Generates text in 2D"
name = "Text 2D"
wasm = true

[package.metadata.example.text_debug]
category = "UI (User Interface)"
description = "An example for debugging text layout"
name = "Text Debug"
wasm = true

[package.metadata.example.text_input]
category = "Input"
description = "Simple text input with IME support"
name = "Text Input"
wasm = false

[package.metadata.example.text_pipeline]
category = "Stress Tests"
description = "Text Pipeline benchmark"
name = "Text Pipeline"
wasm = false

[package.metadata.example.text_wrap_debug]
category = "UI (User Interface)"
description = "Demonstrates text wrapping"
name = "Text Wrap Debug"
wasm = true

[package.metadata.example.texture]
category = "3D Rendering"
description = "Shows configuration of texture materials"
name = "Texture"
wasm = true

[package.metadata.example.texture_atlas]
category = "2D Rendering"
description = "Generates a texture atlas (sprite sheet) from individual sprites"
name = "Texture Atlas"
wasm = false

[package.metadata.example.texture_binding_array]
category = "Shaders"
description = "A shader that shows how to bind and sample multiple textures as a binding array (a.k.a. bindless textures)."
name = "Texture Binding Array (Bindless Textures)"
wasm = false

[package.metadata.example.thread_pool_resources]
category = "Application"
description = "Creates and customizes the internal thread pool"
name = "Thread Pool Resources"
wasm = false

[package.metadata.example.time]
category = "Time"
description = "Explains how Time is handled in ECS"
name = "Time handling"
wasm = false

[package.metadata.example.timers]
category = "Time"
description = "Illustrates ticking `Timer` resources inside systems and handling their state"
name = "Timers"
wasm = false

[package.metadata.example.tonemapping]
category = "3D Rendering"
description = "Compares tonemapping options"
name = "Tonemapping"
wasm = true

[package.metadata.example.touch_input]
category = "Input"
description = "Displays touch presses, releases, and cancels"
name = "Touch Input"
wasm = false

[package.metadata.example.touch_input_events]
category = "Input"
description = "Prints out all touch inputs"
name = "Touch Input Events"
wasm = false

[package.metadata.example.transform]
category = "Transforms"
description = "Shows multiple transformations of objects"
name = "Transform"
wasm = true

[package.metadata.example.transform_hierarchy]
category = "Stress Tests"
description = "Various test cases for hierarchy and transform propagation performance"
name = "Transform Hierarchy"
wasm = false

[package.metadata.example.translation]
category = "Transforms"
description = "Illustrates how to move an object along an axis"
name = "Translation"
wasm = true

[package.metadata.example.transmission]
category = "3D Rendering"
description = "Showcases light transmission in the PBR material"
name = "Transmission"
wasm = true

[package.metadata.example.transparency_2d]
category = "2D Rendering"
description = "Demonstrates transparency in 2d"
name = "Transparency in 2D"
wasm = true

[package.metadata.example.transparency_3d]
category = "3D Rendering"
description = "Demonstrates transparency in 3d"
name = "Transparency in 3D"
wasm = true

[package.metadata.example.transparency_ui]
category = "UI (User Interface)"
description = "Demonstrates transparency for UI"
name = "Transparency UI"
wasm = true

[package.metadata.example.transparent_window]
category = "Window"
description = "Illustrates making the window transparent and hiding the window decoration"
name = "Transparent Window"
wasm = false

[package.metadata.example.two_passes]
category = "3D Rendering"
description = "Renders two 3d passes to the same window from different perspectives"
name = "Two Passes"
wasm = true

[package.metadata.example.type_data]
category = "Reflection"
description = "Demonstrates how to create and use type data"
name = "Type Data"
wasm = false

[package.metadata.example.ui_material]
category = "UI (User Interface)"
description = "Demonstrates creating and using custom Ui materials"
name = "UI Material"
wasm = true

[package.metadata.example.ui_scaling]
category = "UI (User Interface)"
description = "Illustrates how to scale the UI"
name = "UI Scaling"
wasm = true

[package.metadata.example.ui_texture_atlas]
category = "UI (User Interface)"
description = "Illustrates how to use TextureAtlases in UI"
name = "UI Texture Atlas"
wasm = true

[package.metadata.example.ui_texture_atlas_slice]
category = "UI (User Interface)"
description = "Illustrates how to use 9 Slicing for TextureAtlases in UI"
name = "UI Texture Atlas Slice"
wasm = true

[package.metadata.example.ui_texture_slice]
category = "UI (User Interface)"
description = "Illustrates how to use 9 Slicing in UI"
name = "UI Texture Slice"
wasm = true

[package.metadata.example.ui_texture_slice_flip_and_tile]
category = "UI (User Interface)"
description = "Illustrates how to flip and tile images with 9 Slicing in UI"
name = "UI Texture Slice Flipping and Tiling"
wasm = true

[package.metadata.example.update_gltf_scene]
category = "3D Rendering"
description = "Update a scene from a glTF file, either by spawning the scene as a child of another entity, or by accessing the entities of the scene"
name = "Update glTF Scene"
wasm = true

[package.metadata.example.vertex_colors]
category = "3D Rendering"
description = "Shows the use of vertex colors"
name = "Vertex Colors"
wasm = true

[package.metadata.example.viewport_debug]
category = "UI (User Interface)"
description = "An example for debugging viewport coordinates"
name = "Viewport Debug"
wasm = true

[package.metadata.example.virtual_time]
category = "Time"
description = "Shows how `Time<Virtual>` can be used to pause, resume, slow down and speed up a game."
name = "Virtual time"
wasm = false

[package.metadata.example.visibility_range]
category = "3D Rendering"
description = "Demonstrates visibility ranges"
name = "Visibility range"
wasm = true

[package.metadata.example.volumetric_fog]
category = "3D Rendering"
description = "Demonstrates volumetric fog and lighting"
name = "Volumetric fog"
wasm = true

[package.metadata.example.widgets]
category = "Helpers"
description = "Example UI Widgets"
name = "Widgets"
wasm = true

[package.metadata.example.window_drag_move]
category = "Window"
description = "Demonstrates drag move and drag resize without window decoration"
name = "Window Drag Move"
wasm = false

[package.metadata.example.window_fallthrough]
category = "UI (User Interface)"
description = "Illustrates how to access `winit::window::Window`'s `hittest` functionality."
name = "Window Fallthrough"
wasm = false

[package.metadata.example.window_resizing]
category = "Window"
description = "Demonstrates resizing and responding to resizing a window"
name = "Window Resizing"
wasm = true

[package.metadata.example.window_settings]
category = "Window"
description = "Demonstrates customizing default window settings"
name = "Window Settings"
wasm = true

[package.metadata.example.wireframe]
category = "3D Rendering"
description = "Showcases wireframe rendering"
name = "Wireframe"
wasm = false

[package.metadata.example.wireframe_2d]
category = "2D Rendering"
description = "Showcases wireframes for 2d meshes"
name = "2D Wireframe"
wasm = false

[package.metadata.example.without_winit]
category = "Application"
description = "Create an application without winit (runs single time, no event loop)"
name = "Without Winit"
wasm = false

[package.metadata.example.z_index]
category = "UI (User Interface)"
description = "Demonstrates how to control the relative depth (z-position) of UI elements"
name = "UI Z-Index"
wasm = true

[features]
accesskit_unix = ["bevy_internal/accesskit_unix"]
android-game-activity = ["bevy_internal/android-game-activity"]
android-native-activity = ["bevy_internal/android-native-activity"]
android_shared_stdcxx = ["bevy_internal/android_shared_stdcxx"]
animation = [
    "bevy_internal/animation",
    "bevy_animation",
]
asset_processor = ["bevy_internal/asset_processor"]
async-io = ["bevy_internal/async-io"]
async_executor = [
    "std",
    "bevy_internal/async_executor",
]
basis-universal = ["bevy_internal/basis-universal"]
bevy_animation = [
    "bevy_internal/bevy_animation",
    "bevy_color",
]
bevy_asset = ["bevy_internal/bevy_asset"]
bevy_audio = ["bevy_internal/bevy_audio"]
bevy_ci_testing = ["bevy_internal/bevy_ci_testing"]
bevy_color = ["bevy_internal/bevy_color"]
bevy_core_pipeline = [
    "bevy_internal/bevy_core_pipeline",
    "bevy_asset",
    "bevy_render",
]
bevy_debug_stepping = ["bevy_internal/bevy_debug_stepping"]
bevy_dev_tools = ["bevy_internal/bevy_dev_tools"]
bevy_gilrs = ["bevy_internal/bevy_gilrs"]
bevy_gizmos = [
    "bevy_internal/bevy_gizmos",
    "bevy_color",
]
bevy_gltf = [
    "bevy_internal/bevy_gltf",
    "bevy_asset",
    "bevy_scene",
    "bevy_pbr",
]
bevy_image = ["bevy_internal/bevy_image"]
bevy_input_focus = ["bevy_internal/bevy_input_focus"]
bevy_log = ["bevy_internal/bevy_log"]
bevy_mesh_picking_backend = [
    "bevy_picking",
    "bevy_internal/bevy_mesh_picking_backend",
]
bevy_pbr = [
    "bevy_internal/bevy_pbr",
    "bevy_asset",
    "bevy_render",
    "bevy_core_pipeline",
]
bevy_picking = ["bevy_internal/bevy_picking"]
bevy_remote = ["bevy_internal/bevy_remote"]
bevy_render = [
    "bevy_internal/bevy_render",
    "bevy_color",
]
bevy_scene = [
    "bevy_internal/bevy_scene",
    "bevy_asset",
]
bevy_sprite = [
    "bevy_internal/bevy_sprite",
    "bevy_render",
    "bevy_core_pipeline",
    "bevy_color",
]
bevy_sprite_picking_backend = [
    "bevy_picking",
    "bevy_internal/bevy_sprite_picking_backend",
]
bevy_state = ["bevy_internal/bevy_state"]
bevy_text = [
    "bevy_internal/bevy_text",
    "bevy_asset",
    "bevy_sprite",
]
bevy_ui = [
    "bevy_internal/bevy_ui",
    "bevy_core_pipeline",
    "bevy_text",
    "bevy_sprite",
    "bevy_color",
]
bevy_ui_debug = ["bevy_internal/bevy_ui_debug"]
bevy_ui_picking_backend = [
    "bevy_picking",
    "bevy_internal/bevy_ui_picking_backend",
]
bevy_window = ["bevy_internal/bevy_window"]
bevy_winit = [
    "bevy_internal/bevy_winit",
    "bevy_window",
]
bmp = ["bevy_internal/bmp"]
configurable_error_handler = ["bevy_internal/configurable_error_handler"]
critical-section = ["bevy_internal/critical-section"]
custom_cursor = ["bevy_internal/custom_cursor"]
dds = ["bevy_internal/dds"]
debug_glam_assert = ["bevy_internal/debug_glam_assert"]
default = [
    "std",
    "async_executor",
    "android-game-activity",
    "android_shared_stdcxx",
    "animation",
    "bevy_asset",
    "bevy_audio",
    "bevy_color",
    "bevy_core_pipeline",
    "bevy_gilrs",
    "bevy_gizmos",
    "bevy_gltf",
    "bevy_input_focus",
    "bevy_log",
    "bevy_mesh_picking_backend",
    "bevy_pbr",
    "bevy_picking",
    "bevy_render",
    "bevy_scene",
    "bevy_sprite",
    "bevy_sprite_picking_backend",
    "bevy_state",
    "bevy_text",
    "bevy_ui",
    "bevy_ui_picking_backend",
    "bevy_window",
    "bevy_winit",
    "custom_cursor",
    "default_font",
    "hdr",
    "multi_threaded",
    "png",
    "smaa_luts",
    "sysinfo_plugin",
    "tonemapping_luts",
    "vorbis",
    "webgl2",
    "x11",
]
default_font = ["bevy_internal/default_font"]
default_no_std = [
    "libm",
    "critical-section",
    "bevy_color",
    "bevy_state",
]
detailed_trace = ["bevy_internal/detailed_trace"]
dynamic_linking = [
    "dep:bevy_dylib",
    "bevy_internal/dynamic_linking",
]
embedded_watcher = ["bevy_internal/embedded_watcher"]
experimental_pbr_pcss = ["bevy_internal/experimental_pbr_pcss"]
exr = ["bevy_internal/exr"]
ff = ["bevy_internal/ff"]
file_watcher = ["bevy_internal/file_watcher"]
flac = ["bevy_internal/flac"]
ghost_nodes = ["bevy_internal/ghost_nodes"]
gif = ["bevy_internal/gif"]
glam_assert = ["bevy_internal/glam_assert"]
hdr = ["bevy_internal/hdr"]
ico = ["bevy_internal/ico"]
jpeg = ["bevy_internal/jpeg"]
ktx2 = ["bevy_internal/ktx2"]
libm = ["bevy_internal/libm"]
meshlet = ["bevy_internal/meshlet"]
meshlet_processor = ["bevy_internal/meshlet_processor"]
minimp3 = ["bevy_internal/minimp3"]
mp3 = ["bevy_internal/mp3"]
multi_threaded = ["bevy_internal/multi_threaded"]
pbr_anisotropy_texture = ["bevy_internal/pbr_anisotropy_texture"]
pbr_multi_layer_material_textures = ["bevy_internal/pbr_multi_layer_material_textures"]
pbr_specular_textures = ["bevy_internal/pbr_specular_textures"]
pbr_transmission_textures = ["bevy_internal/pbr_transmission_textures"]
png = ["bevy_internal/png"]
pnm = ["bevy_internal/pnm"]
qoi = ["bevy_internal/qoi"]
reflect_documentation = ["bevy_internal/reflect_documentation"]
reflect_functions = ["bevy_internal/reflect_functions"]
serialize = ["bevy_internal/serialize"]
shader_format_glsl = ["bevy_internal/shader_format_glsl"]
shader_format_spirv = ["bevy_internal/shader_format_spirv"]
shader_format_wesl = ["bevy_internal/shader_format_wesl"]
smaa_luts = ["bevy_internal/smaa_luts"]
spirv_shader_passthrough = ["bevy_internal/spirv_shader_passthrough"]
statically-linked-dxc = ["bevy_internal/statically-linked-dxc"]
std = ["bevy_internal/std"]
symphonia-aac = ["bevy_internal/symphonia-aac"]
symphonia-all = ["bevy_internal/symphonia-all"]
symphonia-flac = ["bevy_internal/symphonia-flac"]
symphonia-isomp4 = ["bevy_internal/symphonia-isomp4"]
symphonia-vorbis = ["bevy_internal/symphonia-vorbis"]
symphonia-wav = ["bevy_internal/symphonia-wav"]
sysinfo_plugin = ["bevy_internal/sysinfo_plugin"]
tga = ["bevy_internal/tga"]
tiff = ["bevy_internal/tiff"]
tonemapping_luts = [
    "bevy_internal/tonemapping_luts",
    "ktx2",
    "zstd",
]
trace = [
    "bevy_internal/trace",
    "dep:tracing",
]
trace_chrome = [
    "trace",
    "bevy_internal/trace_chrome",
]
trace_tracy = [
    "trace",
    "bevy_internal/trace_tracy",
]
trace_tracy_memory = [
    "trace",
    "bevy_internal/trace_tracy",
    "bevy_internal/trace_tracy_memory",
]
track_location = ["bevy_internal/track_location"]
vorbis = ["bevy_internal/vorbis"]
wav = ["bevy_internal/wav"]
wayland = ["bevy_internal/wayland"]
web = ["bevy_internal/web"]
webgl2 = ["bevy_internal/webgl"]
webgpu = ["bevy_internal/webgpu"]
webp = ["bevy_internal/webp"]
x11 = ["bevy_internal/x11"]
zlib = ["bevy_internal/zlib"]
zstd = ["bevy_internal/zstd"]

[lib]
name = "bevy"
path = "src/lib.rs"

[[example]]
name = "2d_gizmos"
path = "examples/gizmos/2d_gizmos.rs"
doc-scrape-examples = true

[[example]]
name = "2d_screen_shake"
path = "examples/camera/2d_screen_shake.rs"
doc-scrape-examples = true

[[example]]
name = "2d_shapes"
path = "examples/2d/2d_shapes.rs"
doc-scrape-examples = true

[[example]]
name = "2d_top_down_camera"
path = "examples/camera/2d_top_down_camera.rs"
doc-scrape-examples = true

[[example]]
name = "2d_viewport_to_world"
path = "examples/2d/2d_viewport_to_world.rs"
doc-scrape-examples = true

[[example]]
name = "3d_gizmos"
path = "examples/gizmos/3d_gizmos.rs"
doc-scrape-examples = true

[[example]]
name = "3d_rotation"
path = "examples/transforms/3d_rotation.rs"
doc-scrape-examples = true

[[example]]
name = "3d_scene"
path = "examples/3d/3d_scene.rs"
doc-scrape-examples = true

[[example]]
name = "3d_shapes"
path = "examples/3d/3d_shapes.rs"
doc-scrape-examples = true

[[example]]
name = "3d_viewport_to_world"
path = "examples/3d/3d_viewport_to_world.rs"
doc-scrape-examples = true

[[example]]
name = "alien_cake_addict"
path = "examples/games/alien_cake_addict.rs"
doc-scrape-examples = true

[[example]]
name = "align"
path = "examples/transforms/align.rs"
doc-scrape-examples = true

[[example]]
name = "alter_mesh"
path = "examples/asset/alter_mesh.rs"
doc-scrape-examples = true

[[example]]
name = "alter_sprite"
path = "examples/asset/alter_sprite.rs"
doc-scrape-examples = true

[[example]]
name = "ambiguity_detection"
path = "tests/ecs/ambiguity_detection.rs"
doc-scrape-examples = true

[[example]]
name = "animate_shader"
path = "examples/shader/animate_shader.rs"
doc-scrape-examples = true

[[example]]
name = "animated_material"
path = "examples/3d/animated_material.rs"
doc-scrape-examples = true

[[example]]
name = "animated_mesh"
path = "examples/animation/animated_mesh.rs"
doc-scrape-examples = true

[[example]]
name = "animated_mesh_control"
path = "examples/animation/animated_mesh_control.rs"
doc-scrape-examples = true

[[example]]
name = "animated_mesh_events"
path = "examples/animation/animated_mesh_events.rs"
doc-scrape-examples = true

[[example]]
name = "animated_transform"
path = "examples/animation/animated_transform.rs"
doc-scrape-examples = true

[[example]]
name = "animated_ui"
path = "examples/animation/animated_ui.rs"
doc-scrape-examples = true

[[example]]
name = "animation_events"
path = "examples/animation/animation_events.rs"
doc-scrape-examples = true

[[example]]
name = "animation_graph"
path = "examples/animation/animation_graph.rs"
doc-scrape-examples = true

[[example]]
name = "animation_masks"
path = "examples/animation/animation_masks.rs"
doc-scrape-examples = true

[[example]]
name = "anisotropy"
path = "examples/3d/anisotropy.rs"
doc-scrape-examples = true
required-features = [
    "jpeg",
    "pbr_anisotropy_texture",
]

[[example]]
name = "anti_aliasing"
path = "examples/3d/anti_aliasing.rs"
doc-scrape-examples = true

[[example]]
name = "array_texture"
path = "examples/shader/array_texture.rs"
doc-scrape-examples = true

[[example]]
name = "asset_decompression"
path = "examples/asset/asset_decompression.rs"
doc-scrape-examples = true

[[example]]
name = "asset_loading"
path = "examples/asset/asset_loading.rs"
doc-scrape-examples = true

[[example]]
name = "asset_processing"
path = "examples/asset/processing/asset_processing.rs"
doc-scrape-examples = true
required-features = [
    "file_watcher",
    "asset_processor",
]

[[example]]
name = "asset_settings"
path = "examples/asset/asset_settings.rs"
doc-scrape-examples = true

[[example]]
name = "async_compute"
path = "examples/async_tasks/async_compute.rs"
doc-scrape-examples = true

[[example]]
name = "atmosphere"
path = "examples/3d/atmosphere.rs"
doc-scrape-examples = true

[[example]]
name = "atmospheric_fog"
path = "examples/3d/atmospheric_fog.rs"
doc-scrape-examples = true

[[example]]
name = "audio"
path = "examples/audio/audio.rs"
doc-scrape-examples = true

[[example]]
name = "audio_control"
path = "examples/audio/audio_control.rs"
doc-scrape-examples = true

[[example]]
name = "auto_exposure"
path = "examples/3d/auto_exposure.rs"
doc-scrape-examples = true

[[example]]
name = "automatic_instancing"
path = "examples/shader/automatic_instancing.rs"
doc-scrape-examples = true

[[example]]
name = "axes"
path = "examples/gizmos/axes.rs"
doc-scrape-examples = true

[[example]]
name = "bevymark"
path = "examples/stress_tests/bevymark.rs"
doc-scrape-examples = true

[[example]]
name = "blend_modes"
path = "examples/3d/blend_modes.rs"
doc-scrape-examples = true

[[example]]
name = "bloom_2d"
path = "examples/2d/bloom_2d.rs"
doc-scrape-examples = true

[[example]]
name = "bloom_3d"
path = "examples/3d/bloom_3d.rs"
doc-scrape-examples = true

[[example]]
name = "borders"
path = "examples/ui/borders.rs"
doc-scrape-examples = true

[[example]]
name = "bounding_2d"
path = "examples/math/bounding_2d.rs"
doc-scrape-examples = true

[[example]]
name = "box_shadow"
path = "examples/ui/box_shadow.rs"
doc-scrape-examples = true

[[example]]
name = "breakout"
path = "examples/games/breakout.rs"
doc-scrape-examples = true

[[example]]
name = "button"
path = "examples/ui/button.rs"
doc-scrape-examples = true

[[example]]
name = "camera_controller"
crate-type = ["lib"]
path = "examples/helpers/camera_controller.rs"
doc-scrape-examples = true

[[example]]
name = "camera_orbit"
path = "examples/camera/camera_orbit.rs"
doc-scrape-examples = true

[[example]]
name = "camera_sub_view"
path = "examples/3d/camera_sub_view.rs"
doc-scrape-examples = true

[[example]]
name = "change_detection"
path = "examples/ecs/change_detection.rs"
doc-scrape-examples = true
required-features = ["track_location"]

[[example]]
name = "char_input_events"
path = "examples/input/char_input_events.rs"
doc-scrape-examples = true

[[example]]
name = "clear_color"
path = "examples/window/clear_color.rs"
doc-scrape-examples = true

[[example]]
name = "clearcoat"
path = "examples/3d/clearcoat.rs"
doc-scrape-examples = true
required-features = ["pbr_multi_layer_material_textures"]

[[example]]
name = "client"
path = "examples/remote/client.rs"
doc-scrape-examples = true
required-features = ["bevy_remote"]

[[example]]
name = "clustered_decals"
path = "examples/3d/clustered_decals.rs"
doc-scrape-examples = true

[[example]]
name = "color_animation"
path = "examples/animation/color_animation.rs"
doc-scrape-examples = true

[[example]]
name = "color_grading"
path = "examples/3d/color_grading.rs"
doc-scrape-examples = true

[[example]]
name = "component_hooks"
path = "examples/ecs/component_hooks.rs"
doc-scrape-examples = true

[[example]]
name = "compute_shader_game_of_life"
path = "examples/shader/compute_shader_game_of_life.rs"
doc-scrape-examples = true

[[example]]
name = "computed_states"
path = "examples/state/computed_states.rs"
doc-scrape-examples = true
required-features = ["bevy_dev_tools"]

[[example]]
name = "contributors"
path = "examples/games/contributors.rs"
doc-scrape-examples = true

[[example]]
name = "cpu_draw"
path = "examples/2d/cpu_draw.rs"
doc-scrape-examples = true

[[example]]
name = "cubic_splines"
path = "examples/math/cubic_splines.rs"
doc-scrape-examples = true

[[example]]
name = "custom_asset"
path = "examples/asset/custom_asset.rs"
doc-scrape-examples = true

[[example]]
name = "custom_asset_reader"
path = "examples/asset/custom_asset_reader.rs"
doc-scrape-examples = true

[[example]]
name = "custom_attributes"
path = "examples/reflection/custom_attributes.rs"
doc-scrape-examples = true

[[example]]
name = "custom_cursor_image"
path = "examples/window/custom_cursor_image.rs"
doc-scrape-examples = true
required-features = ["custom_cursor"]

[[example]]
name = "custom_diagnostic"
path = "examples/diagnostics/custom_diagnostic.rs"
doc-scrape-examples = true

[[example]]
name = "custom_gltf_vertex_attribute"
path = "examples/2d/custom_gltf_vertex_attribute.rs"
doc-scrape-examples = true

[[example]]
name = "custom_loop"
path = "examples/app/custom_loop.rs"
doc-scrape-examples = true

[[example]]
name = "custom_phase_item"
path = "examples/shader/custom_phase_item.rs"
doc-scrape-examples = true

[[example]]
name = "custom_post_processing"
path = "examples/shader/custom_post_processing.rs"
doc-scrape-examples = true

[[example]]
name = "custom_primitives"
path = "examples/math/custom_primitives.rs"
doc-scrape-examples = true

[[example]]
name = "custom_projection"
path = "examples/camera/custom_projection.rs"
doc-scrape-examples = true

[[example]]
name = "custom_query_param"
path = "examples/ecs/custom_query_param.rs"
doc-scrape-examples = true

[[example]]
name = "custom_render_phase"
path = "examples/shader/custom_render_phase.rs"
doc-scrape-examples = true

[[example]]
name = "custom_schedule"
path = "examples/ecs/custom_schedule.rs"
doc-scrape-examples = true

[[example]]
name = "custom_shader_instancing"
path = "examples/shader/custom_shader_instancing.rs"
doc-scrape-examples = true

[[example]]
name = "custom_skinned_mesh"
path = "examples/animation/custom_skinned_mesh.rs"
doc-scrape-examples = true

[[example]]
name = "custom_transitions"
path = "examples/state/custom_transitions.rs"
doc-scrape-examples = true
required-features = ["bevy_dev_tools"]

[[example]]
name = "custom_user_event"
path = "examples/window/custom_user_event.rs"
doc-scrape-examples = true

[[example]]
name = "custom_vertex_attribute"
path = "examples/shader/custom_vertex_attribute.rs"
doc-scrape-examples = true

[[example]]
name = "debug_picking"
path = "examples/picking/debug_picking.rs"
doc-scrape-examples = true
required-features = ["bevy_dev_tools"]

[[example]]
name = "decal"
path = "examples/3d/decal.rs"
doc-scrape-examples = true

[[example]]
name = "decodable"
path = "examples/audio/decodable.rs"
doc-scrape-examples = true

[[example]]
name = "deferred_rendering"
path = "examples/3d/deferred_rendering.rs"
doc-scrape-examples = true

[[example]]
name = "depth_of_field"
path = "examples/3d/depth_of_field.rs"
doc-scrape-examples = true

[[example]]
name = "desk_toy"
path = "examples/games/desk_toy.rs"
doc-scrape-examples = true

[[example]]
name = "directional_navigation"
path = "examples/ui/directional_navigation.rs"
doc-scrape-examples = true

[[example]]
name = "display_and_visibility"
path = "examples/ui/display_and_visibility.rs"
doc-scrape-examples = true

[[example]]
name = "drag_and_drop"
path = "examples/app/drag_and_drop.rs"
doc-scrape-examples = true

[[example]]
name = "dynamic"
path = "examples/ecs/dynamic.rs"
doc-scrape-examples = true

[[example]]
name = "dynamic_types"
path = "examples/reflection/dynamic_types.rs"
doc-scrape-examples = true

[[example]]
name = "eased_motion"
path = "examples/animation/eased_motion.rs"
doc-scrape-examples = true

[[example]]
name = "easing_functions"
path = "examples/animation/easing_functions.rs"
doc-scrape-examples = true

[[example]]
name = "ecs_guide"
path = "examples/ecs/ecs_guide.rs"
doc-scrape-examples = true

[[example]]
name = "edit_material_on_gltf"
path = "examples/3d/edit_material_on_gltf.rs"
doc-scrape-examples = true

[[example]]
name = "embedded_asset"
path = "examples/asset/embedded_asset.rs"
doc-scrape-examples = true

[[example]]
name = "empty"
path = "examples/app/empty.rs"
doc-scrape-examples = true

[[example]]
name = "empty_defaults"
path = "examples/app/empty_defaults.rs"
doc-scrape-examples = true

[[example]]
name = "enabling_disabling_diagnostic"
path = "examples/diagnostics/enabling_disabling_diagnostic.rs"
doc-scrape-examples = true

[[example]]
name = "entity_disabling"
path = "examples/ecs/entity_disabling.rs"
doc-scrape-examples = true

[[example]]
name = "error_handling"
path = "examples/ecs/error_handling.rs"
doc-scrape-examples = true
required-features = [
    "bevy_mesh_picking_backend",
    "configurable_error_handler",
]

[[example]]
name = "event"
path = "examples/ecs/event.rs"
doc-scrape-examples = true

[[example]]
name = "extended_material"
path = "examples/shader/extended_material.rs"
doc-scrape-examples = true

[[example]]
name = "extended_material_bindless"
path = "examples/shader/extended_material_bindless.rs"
doc-scrape-examples = true

[[example]]
name = "external_source_external_thread"
path = "examples/async_tasks/external_source_external_thread.rs"
doc-scrape-examples = true

[[example]]
name = "extra_asset_source"
path = "examples/asset/extra_source.rs"
doc-scrape-examples = true

[[example]]
name = "fallback_image"
path = "examples/shader/fallback_image.rs"
doc-scrape-examples = true

[[example]]
name = "fallible_params"
path = "examples/ecs/fallible_params.rs"
doc-scrape-examples = true
required-features = ["configurable_error_handler"]

[[example]]
name = "first_person_view_model"
path = "examples/camera/first_person_view_model.rs"
doc-scrape-examples = true

[[example]]
name = "fixed_timestep"
path = "examples/ecs/fixed_timestep.rs"
doc-scrape-examples = true

[[example]]
name = "flex_layout"
path = "examples/ui/flex_layout.rs"
doc-scrape-examples = true

[[example]]
name = "fog"
path = "examples/3d/fog.rs"
doc-scrape-examples = true

[[example]]
name = "fog_volumes"
path = "examples/3d/fog_volumes.rs"
doc-scrape-examples = true

[[example]]
name = "font_atlas_debug"
path = "examples/ui/font_atlas_debug.rs"
doc-scrape-examples = true

[[example]]
name = "fps_overlay"
path = "examples/dev_tools/fps_overlay.rs"
doc-scrape-examples = true
required-features = ["bevy_dev_tools"]

[[example]]
name = "function_reflection"
path = "examples/reflection/function_reflection.rs"
doc-scrape-examples = true
required-features = ["reflect_functions"]

[[example]]
name = "game_menu"
path = "examples/games/game_menu.rs"
doc-scrape-examples = true

[[example]]
name = "gamepad_input"
path = "examples/input/gamepad_input.rs"
doc-scrape-examples = true

[[example]]
name = "gamepad_input_events"
path = "examples/input/gamepad_input_events.rs"
doc-scrape-examples = true

[[example]]
name = "gamepad_rumble"
path = "examples/input/gamepad_rumble.rs"
doc-scrape-examples = true

[[example]]
name = "generate_custom_mesh"
path = "examples/3d/generate_custom_mesh.rs"
doc-scrape-examples = true

[[example]]
name = "generic_reflection"
path = "examples/reflection/generic_reflection.rs"
doc-scrape-examples = true

[[example]]
name = "generic_system"
path = "examples/ecs/generic_system.rs"
doc-scrape-examples = true

[[example]]
name = "ghost_nodes"
path = "examples/ui/ghost_nodes.rs"
doc-scrape-examples = true
required-features = ["ghost_nodes"]

[[example]]
name = "gltf_skinned_mesh"
path = "examples/animation/gltf_skinned_mesh.rs"
doc-scrape-examples = true

[[example]]
name = "gpu_readback"
path = "examples/shader/gpu_readback.rs"
doc-scrape-examples = true

[[example]]
name = "grid"
path = "examples/ui/grid.rs"
doc-scrape-examples = true

[[example]]
name = "headless"
path = "examples/app/headless.rs"
doc-scrape-examples = true
required-features = ["bevy_log"]

[[example]]
name = "headless_renderer"
path = "examples/app/headless_renderer.rs"
doc-scrape-examples = true

[[example]]
name = "hello_world"
path = "examples/hello_world.rs"
doc-scrape-examples = true

[[example]]
name = "hierarchy"
path = "examples/ecs/hierarchy.rs"
doc-scrape-examples = true

[[example]]
name = "hot_asset_reloading"
path = "examples/asset/hot_asset_reloading.rs"
doc-scrape-examples = true
required-features = ["file_watcher"]

[[example]]
name = "immutable_components"
path = "examples/ecs/immutable_components.rs"
doc-scrape-examples = true

[[example]]
name = "irradiance_volumes"
path = "examples/3d/irradiance_volumes.rs"
doc-scrape-examples = true

[[example]]
name = "iter_combinations"
path = "examples/ecs/iter_combinations.rs"
doc-scrape-examples = true

[[example]]
name = "keyboard_input"
path = "examples/input/keyboard_input.rs"
doc-scrape-examples = true

[[example]]
name = "keyboard_input_events"
path = "examples/input/keyboard_input_events.rs"
doc-scrape-examples = true

[[example]]
name = "keyboard_modifiers"
path = "examples/input/keyboard_modifiers.rs"
doc-scrape-examples = true

[[example]]
name = "light_gizmos"
path = "examples/gizmos/light_gizmos.rs"
doc-scrape-examples = true

[[example]]
name = "lighting"
path = "examples/3d/lighting.rs"
doc-scrape-examples = true

[[example]]
name = "lightmaps"
path = "examples/3d/lightmaps.rs"
doc-scrape-examples = true

[[example]]
name = "lines"
path = "examples/3d/lines.rs"
doc-scrape-examples = true

[[example]]
name = "load_gltf"
path = "examples/3d/load_gltf.rs"
doc-scrape-examples = true

[[example]]
name = "load_gltf_extras"
path = "examples/3d/load_gltf_extras.rs"
doc-scrape-examples = true

[[example]]
name = "loading_screen"
path = "examples/games/loading_screen.rs"
doc-scrape-examples = true

[[example]]
name = "log_diagnostics"
path = "examples/diagnostics/log_diagnostics.rs"
doc-scrape-examples = true

[[example]]
name = "log_layers"
path = "examples/app/log_layers.rs"
doc-scrape-examples = true

[[example]]
name = "log_layers_ecs"
path = "examples/app/log_layers_ecs.rs"
doc-scrape-examples = true

[[example]]
name = "logs"
path = "examples/app/logs.rs"
doc-scrape-examples = true

[[example]]
name = "low_power"
path = "examples/window/low_power.rs"
doc-scrape-examples = true

[[example]]
name = "many_animated_sprites"
path = "examples/stress_tests/many_animated_sprites.rs"
doc-scrape-examples = true

[[example]]
name = "many_buttons"
path = "examples/stress_tests/many_buttons.rs"
doc-scrape-examples = true

[[example]]
name = "many_cameras_lights"
path = "examples/stress_tests/many_cameras_lights.rs"
doc-scrape-examples = true

[[example]]
name = "many_components"
path = "examples/stress_tests/many_components.rs"
doc-scrape-examples = true

[[example]]
name = "many_cubes"
path = "examples/stress_tests/many_cubes.rs"
doc-scrape-examples = true

[[example]]
name = "many_foxes"
path = "examples/stress_tests/many_foxes.rs"
doc-scrape-examples = true

[[example]]
name = "many_gizmos"
path = "examples/stress_tests/many_gizmos.rs"
doc-scrape-examples = true

[[example]]
name = "many_glyphs"
path = "examples/stress_tests/many_glyphs.rs"
doc-scrape-examples = true

[[example]]
name = "many_lights"
path = "examples/stress_tests/many_lights.rs"
doc-scrape-examples = true

[[example]]
name = "many_materials"
path = "examples/stress_tests/many_materials.rs"
doc-scrape-examples = true

[[example]]
name = "many_sprites"
path = "examples/stress_tests/many_sprites.rs"
doc-scrape-examples = true

[[example]]
name = "many_text2d"
path = "examples/stress_tests/many_text2d.rs"
doc-scrape-examples = true

[[example]]
name = "mesh2d"
path = "examples/2d/mesh2d.rs"
doc-scrape-examples = true

[[example]]
name = "mesh2d_alpha_mode"
path = "examples/2d/mesh2d_alpha_mode.rs"
doc-scrape-examples = true

[[example]]
name = "mesh2d_arcs"
path = "examples/2d/mesh2d_arcs.rs"
doc-scrape-examples = true

[[example]]
name = "mesh2d_manual"
path = "examples/2d/mesh2d_manual.rs"
doc-scrape-examples = true

[[example]]
name = "mesh2d_repeated_texture"
path = "examples/2d/mesh2d_repeated_texture.rs"
doc-scrape-examples = true

[[example]]
name = "mesh2d_vertex_color_texture"
path = "examples/2d/mesh2d_vertex_color_texture.rs"
doc-scrape-examples = true

[[example]]
name = "mesh_picking"
path = "examples/picking/mesh_picking.rs"
doc-scrape-examples = true
required-features = ["bevy_mesh_picking_backend"]

[[example]]
name = "mesh_ray_cast"
path = "examples/3d/mesh_ray_cast.rs"
doc-scrape-examples = true

[[example]]
name = "meshlet"
path = "examples/3d/meshlet.rs"
doc-scrape-examples = true
required-features = ["meshlet"]

[[example]]
name = "minimizing"
path = "tests/window/minimizing.rs"
doc-scrape-examples = true

[[example]]
name = "mixed_lighting"
path = "examples/3d/mixed_lighting.rs"
doc-scrape-examples = true
required-features = ["jpeg"]

[[example]]
name = "monitor_info"
path = "examples/window/monitor_info.rs"
doc-scrape-examples = true

[[example]]
name = "morph_targets"
path = "examples/animation/morph_targets.rs"
doc-scrape-examples = true

[[example]]
name = "motion_blur"
path = "examples/3d/motion_blur.rs"
doc-scrape-examples = true

[[example]]
name = "mouse_grab"
path = "examples/input/mouse_grab.rs"
doc-scrape-examples = true

[[example]]
name = "mouse_input"
path = "examples/input/mouse_input.rs"
doc-scrape-examples = true

[[example]]
name = "mouse_input_events"
path = "examples/input/mouse_input_events.rs"
doc-scrape-examples = true

[[example]]
name = "move_sprite"
path = "examples/2d/move_sprite.rs"
doc-scrape-examples = true

[[example]]
name = "multi_asset_sync"
path = "examples/asset/multi_asset_sync.rs"
doc-scrape-examples = true

[[example]]
name = "multiple_windows"
path = "examples/window/multiple_windows.rs"
doc-scrape-examples = true

[[example]]
name = "no_prepass"
path = "tests/3d/no_prepass.rs"
doc-scrape-examples = true

[[example]]
name = "no_renderer"
path = "examples/app/no_renderer.rs"
doc-scrape-examples = true

[[example]]
name = "nondeterministic_system_order"
path = "examples/ecs/nondeterministic_system_order.rs"
doc-scrape-examples = true

[[example]]
name = "observer_propagation"
path = "examples/ecs/observer_propagation.rs"
doc-scrape-examples = true

[[example]]
name = "observers"
path = "examples/ecs/observers.rs"
doc-scrape-examples = true

[[example]]
name = "occlusion_culling"
path = "examples/3d/occlusion_culling.rs"
doc-scrape-examples = true

[[example]]
name = "one_shot_systems"
path = "examples/ecs/one_shot_systems.rs"
doc-scrape-examples = true

[[example]]
name = "order_independent_transparency"
path = "examples/3d/order_independent_transparency.rs"
doc-scrape-examples = true

[[example]]
name = "orthographic"
path = "examples/3d/orthographic.rs"
doc-scrape-examples = true

[[example]]
name = "overflow"
path = "examples/ui/overflow.rs"
doc-scrape-examples = true

[[example]]
name = "overflow_clip_margin"
path = "examples/ui/overflow_clip_margin.rs"
doc-scrape-examples = true

[[example]]
name = "overflow_debug"
path = "examples/ui/overflow_debug.rs"
doc-scrape-examples = true

[[example]]
name = "parallax_mapping"
path = "examples/3d/parallax_mapping.rs"
doc-scrape-examples = true

[[example]]
name = "parallel_query"
path = "examples/ecs/parallel_query.rs"
doc-scrape-examples = true

[[example]]
name = "parenting"
path = "examples/3d/parenting.rs"
doc-scrape-examples = true

[[example]]
name = "pbr"
path = "examples/3d/pbr.rs"
doc-scrape-examples = true

[[example]]
name = "pcss"
path = "examples/3d/pcss.rs"
doc-scrape-examples = true
required-features = ["experimental_pbr_pcss"]

[[example]]
name = "physics_in_fixed_timestep"
path = "examples/movement/physics_in_fixed_timestep.rs"
doc-scrape-examples = true

[[example]]
name = "pitch"
path = "examples/audio/pitch.rs"
doc-scrape-examples = true

[[example]]
name = "pixel_grid_snap"
path = "examples/2d/pixel_grid_snap.rs"
doc-scrape-examples = true

[[example]]
name = "plugin"
path = "examples/app/plugin.rs"
doc-scrape-examples = true

[[example]]
name = "plugin_group"
path = "examples/app/plugin_group.rs"
doc-scrape-examples = true

[[example]]
name = "post_processing"
path = "examples/3d/post_processing.rs"
doc-scrape-examples = true

[[example]]
name = "projection_zoom"
path = "examples/camera/projection_zoom.rs"
doc-scrape-examples = true

[[example]]
name = "query_gltf_primitives"
path = "examples/3d/query_gltf_primitives.rs"
doc-scrape-examples = true

[[example]]
name = "random_sampling"
path = "examples/math/random_sampling.rs"
doc-scrape-examples = true

[[example]]
name = "reflection"
path = "examples/reflection/reflection.rs"
doc-scrape-examples = true

[[example]]
name = "reflection_probes"
path = "examples/3d/reflection_probes.rs"
doc-scrape-examples = true

[[example]]
name = "reflection_types"
path = "examples/reflection/reflection_types.rs"
doc-scrape-examples = true

[[example]]
name = "relationships"
path = "examples/ecs/relationships.rs"
doc-scrape-examples = true

[[example]]
name = "relative_cursor_position"
path = "examples/ui/relative_cursor_position.rs"
doc-scrape-examples = true

[[example]]
name = "removal_detection"
path = "examples/ecs/removal_detection.rs"
doc-scrape-examples = true

[[example]]
name = "render_primitives"
path = "examples/math/render_primitives.rs"
doc-scrape-examples = true

[[example]]
name = "render_to_texture"
path = "examples/3d/render_to_texture.rs"
doc-scrape-examples = true

[[example]]
name = "render_ui_to_texture"
path = "examples/ui/render_ui_to_texture.rs"
doc-scrape-examples = true

[[example]]
name = "repeated_texture"
path = "examples/asset/repeated_texture.rs"
doc-scrape-examples = true

[[example]]
name = "resizing"
path = "tests/window/resizing.rs"
doc-scrape-examples = true

[[example]]
name = "return_after_run"
path = "examples/app/return_after_run.rs"
doc-scrape-examples = true

[[example]]
name = "rotate_environment_map"
path = "examples/3d/rotate_environment_map.rs"
doc-scrape-examples = true
required-features = ["pbr_multi_layer_material_textures"]

[[example]]
name = "rotation"
path = "examples/2d/rotation.rs"
doc-scrape-examples = true

[[example]]
name = "run_conditions"
path = "examples/ecs/run_conditions.rs"
doc-scrape-examples = true

[[example]]
name = "sampling_primitives"
path = "examples/math/sampling_primitives.rs"
doc-scrape-examples = true

[[example]]
name = "scale"
path = "examples/transforms/scale.rs"
doc-scrape-examples = true

[[example]]
name = "scale_factor_override"
path = "examples/window/scale_factor_override.rs"
doc-scrape-examples = true

[[example]]
name = "scene"
path = "examples/scene/scene.rs"
doc-scrape-examples = true

[[example]]
name = "screenshot"
path = "examples/window/screenshot.rs"
doc-scrape-examples = true

[[example]]
name = "scroll"
path = "examples/ui/scroll.rs"
doc-scrape-examples = true

[[example]]
name = "scrolling_fog"
path = "examples/3d/scrolling_fog.rs"
doc-scrape-examples = true

[[example]]
name = "send_and_receive_events"
path = "examples/ecs/send_and_receive_events.rs"
doc-scrape-examples = true

[[example]]
name = "server"
path = "examples/remote/server.rs"
doc-scrape-examples = true
required-features = ["bevy_remote"]

[[example]]
name = "shader_defs"
path = "examples/shader/shader_defs.rs"
doc-scrape-examples = true

[[example]]
name = "shader_material"
path = "examples/shader/shader_material.rs"
doc-scrape-examples = true

[[example]]
name = "shader_material_2d"
path = "examples/shader/shader_material_2d.rs"
doc-scrape-examples = true

[[example]]
name = "shader_material_bindless"
path = "examples/shader/shader_material_bindless.rs"
doc-scrape-examples = true

[[example]]
name = "shader_material_glsl"
path = "examples/shader/shader_material_glsl.rs"
doc-scrape-examples = true
required-features = ["shader_format_glsl"]

[[example]]
name = "shader_material_screenspace_texture"
path = "examples/shader/shader_material_screenspace_texture.rs"
doc-scrape-examples = true

[[example]]
name = "shader_material_wesl"
path = "examples/shader/shader_material_wesl.rs"
doc-scrape-examples = true
required-features = ["shader_format_wesl"]

[[example]]
name = "shader_prepass"
path = "examples/shader/shader_prepass.rs"
doc-scrape-examples = true

[[example]]
name = "shadow_biases"
path = "examples/3d/shadow_biases.rs"
doc-scrape-examples = true

[[example]]
name = "shadow_caster_receiver"
path = "examples/3d/shadow_caster_receiver.rs"
doc-scrape-examples = true

[[example]]
name = "simple_picking"
path = "examples/picking/simple_picking.rs"
doc-scrape-examples = true
required-features = ["bevy_picking"]

[[example]]
name = "size_constraints"
path = "examples/ui/size_constraints.rs"
doc-scrape-examples = true

[[example]]
name = "skybox"
path = "examples/3d/skybox.rs"
doc-scrape-examples = true

[[example]]
name = "smooth_follow"
path = "examples/movement/smooth_follow.rs"
doc-scrape-examples = true

[[example]]
name = "soundtrack"
path = "examples/audio/soundtrack.rs"
doc-scrape-examples = true

[[example]]
name = "spatial_audio_2d"
path = "examples/audio/spatial_audio_2d.rs"
doc-scrape-examples = true

[[example]]
name = "spatial_audio_3d"
path = "examples/audio/spatial_audio_3d.rs"
doc-scrape-examples = true

[[example]]
name = "specialized_mesh_pipeline"
path = "examples/shader/specialized_mesh_pipeline.rs"
doc-scrape-examples = true

[[example]]
name = "specular_tint"
path = "examples/3d/specular_tint.rs"
doc-scrape-examples = true
required-features = ["pbr_specular_textures"]

[[example]]
name = "spherical_area_lights"
path = "examples/3d/spherical_area_lights.rs"
doc-scrape-examples = true

[[example]]
name = "split_screen"
path = "examples/3d/split_screen.rs"
doc-scrape-examples = true

[[example]]
name = "spotlight"
path = "examples/3d/spotlight.rs"
doc-scrape-examples = true

[[example]]
name = "sprite"
path = "examples/2d/sprite.rs"
doc-scrape-examples = true

[[example]]
name = "sprite_animation"
path = "examples/2d/sprite_animation.rs"
doc-scrape-examples = true

[[example]]
name = "sprite_flipping"
path = "examples/2d/sprite_flipping.rs"
doc-scrape-examples = true

[[example]]
name = "sprite_picking"
path = "examples/picking/sprite_picking.rs"
doc-scrape-examples = true
required-features = ["bevy_sprite_picking_backend"]

[[example]]
name = "sprite_scale"
path = "examples/2d/sprite_scale.rs"
doc-scrape-examples = true

[[example]]
name = "sprite_sheet"
path = "examples/2d/sprite_sheet.rs"
doc-scrape-examples = true

[[example]]
name = "sprite_slice"
path = "examples/2d/sprite_slice.rs"
doc-scrape-examples = true

[[example]]
name = "sprite_tile"
path = "examples/2d/sprite_tile.rs"
doc-scrape-examples = true

[[example]]
name = "ssao"
path = "examples/3d/ssao.rs"
doc-scrape-examples = true

[[example]]
name = "ssr"
path = "examples/3d/ssr.rs"
doc-scrape-examples = true

[[example]]
name = "startup_system"
path = "examples/ecs/startup_system.rs"
doc-scrape-examples = true

[[example]]
name = "states"
path = "examples/state/states.rs"
doc-scrape-examples = true
required-features = ["bevy_dev_tools"]

[[example]]
name = "storage_buffer"
path = "examples/shader/storage_buffer.rs"
doc-scrape-examples = true

[[example]]
name = "sub_states"
path = "examples/state/sub_states.rs"
doc-scrape-examples = true
required-features = ["bevy_dev_tools"]

[[example]]
name = "system_closure"
path = "examples/ecs/system_closure.rs"
doc-scrape-examples = true

[[example]]
name = "system_param"
path = "examples/ecs/system_param.rs"
doc-scrape-examples = true

[[example]]
name = "system_piping"
path = "examples/ecs/system_piping.rs"
doc-scrape-examples = true

[[example]]
name = "system_stepping"
path = "examples/ecs/system_stepping.rs"
doc-scrape-examples = true
required-features = ["bevy_debug_stepping"]

[[example]]
name = "tab_navigation"
path = "examples/ui/tab_navigation.rs"
doc-scrape-examples = true

[[example]]
name = "testbed_2d"
path = "examples/testbed/2d.rs"
doc-scrape-examples = true

[[example]]
name = "testbed_3d"
path = "examples/testbed/3d.rs"
doc-scrape-examples = true

[[example]]
name = "testbed_full_ui"
path = "examples/testbed/full_ui.rs"
doc-scrape-examples = true

[[example]]
name = "testbed_ui"
path = "examples/testbed/ui.rs"
doc-scrape-examples = true

[[example]]
name = "text"
path = "examples/ui/text.rs"
doc-scrape-examples = true

[[example]]
name = "text2d"
path = "examples/2d/text2d.rs"
doc-scrape-examples = true

[[example]]
name = "text_debug"
path = "examples/ui/text_debug.rs"
doc-scrape-examples = true

[[example]]
name = "text_input"
path = "examples/input/text_input.rs"
doc-scrape-examples = true

[[example]]
name = "text_pipeline"
path = "examples/stress_tests/text_pipeline.rs"
doc-scrape-examples = true

[[example]]
name = "text_wrap_debug"
path = "examples/ui/text_wrap_debug.rs"
doc-scrape-examples = true

[[example]]
name = "texture"
path = "examples/3d/texture.rs"
doc-scrape-examples = true

[[example]]
name = "texture_atlas"
path = "examples/2d/texture_atlas.rs"
doc-scrape-examples = true

[[example]]
name = "texture_binding_array"
path = "examples/shader/texture_binding_array.rs"
doc-scrape-examples = true

[[example]]
name = "thread_pool_resources"
path = "examples/app/thread_pool_resources.rs"
doc-scrape-examples = true

[[example]]
name = "time"
path = "examples/time/time.rs"
doc-scrape-examples = true

[[example]]
name = "timers"
path = "examples/time/timers.rs"
doc-scrape-examples = true

[[example]]
name = "tonemapping"
path = "examples/3d/tonemapping.rs"
doc-scrape-examples = true

[[example]]
name = "touch_input"
path = "examples/input/touch_input.rs"
doc-scrape-examples = true

[[example]]
name = "touch_input_events"
path = "examples/input/touch_input_events.rs"
doc-scrape-examples = true

[[example]]
name = "transform"
path = "examples/transforms/transform.rs"
doc-scrape-examples = true

[[example]]
name = "transform_hierarchy"
path = "examples/stress_tests/transform_hierarchy.rs"
doc-scrape-examples = true

[[example]]
name = "translation"
path = "examples/transforms/translation.rs"
doc-scrape-examples = true

[[example]]
name = "transmission"
path = "examples/3d/transmission.rs"
doc-scrape-examples = true

[[example]]
name = "transparency_2d"
path = "examples/2d/transparency_2d.rs"
doc-scrape-examples = true

[[example]]
name = "transparency_3d"
path = "examples/3d/transparency_3d.rs"
doc-scrape-examples = true

[[example]]
name = "transparency_ui"
path = "examples/ui/transparency_ui.rs"
doc-scrape-examples = true

[[example]]
name = "transparent_window"
path = "examples/window/transparent_window.rs"
doc-scrape-examples = true

[[example]]
name = "two_passes"
path = "examples/3d/two_passes.rs"
doc-scrape-examples = true

[[example]]
name = "type_data"
path = "examples/reflection/type_data.rs"
doc-scrape-examples = true

[[example]]
name = "ui_material"
path = "examples/ui/ui_material.rs"
doc-scrape-examples = true

[[example]]
name = "ui_scaling"
path = "examples/ui/ui_scaling.rs"
doc-scrape-examples = true

[[example]]
name = "ui_texture_atlas"
path = "examples/ui/ui_texture_atlas.rs"
doc-scrape-examples = true

[[example]]
name = "ui_texture_atlas_slice"
path = "examples/ui/ui_texture_atlas_slice.rs"
doc-scrape-examples = true

[[example]]
name = "ui_texture_slice"
path = "examples/ui/ui_texture_slice.rs"
doc-scrape-examples = true

[[example]]
name = "ui_texture_slice_flip_and_tile"
path = "examples/ui/ui_texture_slice_flip_and_tile.rs"
doc-scrape-examples = true

[[example]]
name = "update_gltf_scene"
path = "examples/3d/update_gltf_scene.rs"
doc-scrape-examples = true

[[example]]
name = "vertex_colors"
path = "examples/3d/vertex_colors.rs"
doc-scrape-examples = true

[[example]]
name = "viewport_debug"
path = "examples/ui/viewport_debug.rs"
doc-scrape-examples = true

[[example]]
name = "virtual_time"
path = "examples/time/virtual_time.rs"
doc-scrape-examples = true

[[example]]
name = "visibility_range"
path = "examples/3d/visibility_range.rs"
doc-scrape-examples = true

[[example]]
name = "volumetric_fog"
path = "examples/3d/volumetric_fog.rs"
doc-scrape-examples = true

[[example]]
name = "widgets"
crate-type = ["lib"]
path = "examples/helpers/widgets.rs"
doc-scrape-examples = true

[[example]]
name = "window_drag_move"
path = "examples/window/window_drag_move.rs"
doc-scrape-examples = true

[[example]]
name = "window_fallthrough"
path = "examples/ui/window_fallthrough.rs"
doc-scrape-examples = true

[[example]]
name = "window_resizing"
path = "examples/window/window_resizing.rs"
doc-scrape-examples = true

[[example]]
name = "window_settings"
path = "examples/window/window_settings.rs"
doc-scrape-examples = true

[[example]]
name = "wireframe"
path = "examples/3d/wireframe.rs"
doc-scrape-examples = true

[[example]]
name = "wireframe_2d"
path = "examples/2d/wireframe_2d.rs"
doc-scrape-examples = true

[[example]]
name = "without_winit"
path = "examples/app/without_winit.rs"
doc-scrape-examples = true

[[example]]
name = "z_index"
path = "examples/ui/z_index.rs"
doc-scrape-examples = true

[[test]]
name = "how_to_test_apps"
path = "tests/how_to_test_apps.rs"

[[test]]
name = "how_to_test_systems"
path = "tests/how_to_test_systems.rs"

[dependencies.bevy_internal]
version = "0.16.1"
default-features = false

[dependencies.tracing]
version = "0.1"
optional = true
default-features = false

[dev-dependencies.accesskit]
version = "0.18"

[dev-dependencies.anyhow]
version = "1"

[dev-dependencies.argh]
version = "0.1.12"

[dev-dependencies.async-std]
version = "1.13"

[dev-dependencies.bevy_asset]
version = "0.16.1"
default-features = false

[dev-dependencies.bevy_ecs]
version = "0.16.1"
default-features = false

[dev-dependencies.bevy_gizmos]
version = "0.16.1"
default-features = false

[dev-dependencies.bevy_image]
version = "0.16.1"
default-features = false

[dev-dependencies.bevy_reflect]
version = "0.16.1"
default-features = false

[dev-dependencies.bevy_render]
version = "0.16.1"
default-features = false

[dev-dependencies.bevy_state]
version = "0.16.1"
default-features = false

[dev-dependencies.bytemuck]
version = "1.7"

[dev-dependencies.crossbeam-channel]
version = "0.5.0"

[dev-dependencies.event-listener]
version = "5.3.0"

[dev-dependencies.flate2]
version = "1.0"

[dev-dependencies.futures-lite]
version = "2.0.1"

[dev-dependencies.http-body-util]
version = "0.1"

[dev-dependencies.hyper]
version = "1"
features = [
    "server",
    "http1",
]

[dev-dependencies.macro_rules_attribute]
version = "0.2"

[dev-dependencies.nonmax]
version = "0.5"

[dev-dependencies.rand]
version = "0.8.0"

[dev-dependencies.rand_chacha]
version = "0.3.1"

[dev-dependencies.ron]
version = "0.8.0"

[dev-dependencies.serde]
version = "1"
features = ["derive"]

[dev-dependencies.serde_json]
version = "1.0.140"

[dev-dependencies.thiserror]
version = "2.0"

[target.'cfg(not(target_family = "wasm"))'.dependencies.bevy_dylib]
version = "0.16.1"
optional = true
default-features = false

[target.'cfg(not(target_family = "wasm"))'.dev-dependencies.smol]
version = "2"

[target.'cfg(not(target_family = "wasm"))'.dev-dependencies.smol-hyper]
version = "0.1"

[target.'cfg(not(target_family = "wasm"))'.dev-dependencies.smol-macros]
version = "0.1"

[target.'cfg(not(target_family = "wasm"))'.dev-dependencies.ureq]
version = "3.0.8"
features = ["json"]

[target.'cfg(target_arch = "wasm32")'.dev-dependencies.wasm-bindgen]
version = "0.2"

[target.'cfg(target_arch = "wasm32")'.dev-dependencies.web-sys]
version = "0.3"
features = ["Window"]

[lints.clippy]
alloc_instead_of_core = "allow"
allow_attributes = "warn"
allow_attributes_without_reason = "warn"
doc_markdown = "warn"
manual_let_else = "warn"
match_same_arms = "warn"
needless_lifetimes = "allow"
nonstandard_macro_braces = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
ref_as_ptr = "warn"
semicolon_if_nothing_returned = "warn"
std_instead_of_alloc = "allow"
std_instead_of_core = "allow"
too_long_first_doc_paragraph = "allow"
too_many_arguments = "allow"
type_complexity = "allow"
undocumented_unsafe_blocks = "warn"
unwrap_or_default = "warn"

[lints.rust]
missing_docs = "warn"
unsafe_code = "deny"
unsafe_op_in_unsafe_fn = "warn"
unused_qualifications = "warn"

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = ["cfg(docsrs_dep)"]

[profile.stress-test]
lto = "fat"
panic = "abort"
inherits = "release"

[profile.wasm-release]
opt-level = "z"
lto = "fat"
codegen-units = 1
inherits = "release"
